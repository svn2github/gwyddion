# $Id$

###########################################################################
# GNU libc

# http://sourceware.org/bugzilla/show_bug.cgi?id=12424
# Ulrich Drepper says it's OK and should be ignored.

{
   glibc-2.12-x86_64-strtod-buffer-overrun-cond
   Memcheck:Cond
   fun:__GI___strncasecmp_l
   fun:____strtod_l_internal
   fun:g_ascii_strtod
   fun:parse
   fun:gwy_unit_set_from_string
}

{
   glibc-2.12-x86_64-strtod-buffer-overrun-value
   Memcheck:Value8
   fun:__GI___strncasecmp_l
   fun:____strtod_l_internal
   fun:g_ascii_strtod
   fun:parse
   fun:gwy_unit_set_from_string
}

###########################################################################
# GLib quark/interned string handling.  These created forever and the
# corresponding data not intended to be freed.

{
   glib2-static-quark-1
   Memcheck:Leak
   fun:realloc
   fun:g_realloc
   fun:g_quark_from_string
}

{
   glib2-static-quark-2
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_quark_from_string
}

{
   glib2-static-quark-3
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   fun:g_hash_table_resize
   fun:g_hash_table_insert_internal
   fun:g_quark_from_string
}

###########################################################################
# GObject type registration ‘leaks’.  The types are registered forever and
# the corresponding data not intended to be freed.

{
   glib2-static-type-registration-1
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_slice_alloc
   fun:freelist_alloc
   fun:_g_atomic_array_copy
   fun:type_node_any_new_W
   fun:g_type_register_static
   fun:g_type_register_static_simple
}

{
   glib2-static-type-registration-2
   Memcheck:Leak
   fun:realloc
   fun:g_realloc
   fun:type_node_any_new_W
   fun:g_type_register_static
}

{
   glib2-static-interface-registration-1
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_slice_alloc
   fun:freelist_alloc
   fun:_g_atomic_array_copy
   ...
   fun:type_node_add_iface_entry_W
   fun:type_add_interface_Wm
   fun:g_type_add_interface_static
}

{
   glib2-static-class-ref-1
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   fun:g_type_class_ref
}

{
   glib2-static-class-ref-2
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_memdup
   fun:type_iface_vtable_base_init_Wm
   fun:g_type_class_ref
}

