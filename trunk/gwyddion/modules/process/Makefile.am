# @(#) $Id$

processdir = $(pkglibdir)/modules/process

module_ldflags = -shared -Wl,-soname

process_PROGRAMS = \
	angle_dist.so \
	arithmetic.so \
	basicops.so \
	calibrate.so \
	crosscor.so \
	cwt.so \
	dwt.so \
	dwtanisotropy.so \
	dwtcorrection.so \
	dwtdenoise.so \
	edge.so \
	facet-level.so \
	fft.so \
	fit_2d.so \
	fraccor.so \
	fractal.so \
	gradient.so \
	grain_dist.so \
	grain_mark.so \
	grain_rem_threshold.so \
	grain_wshed.so \
	laplace.so \
	level.so \
	linecorrect.so \
	mask_grow_shrink.so \
	maskcor.so \
	maskops.so \
	median-bg.so \
	outliers.so \
	polylevel.so \
	presentationops.so \
	rotate.so \
	scale.so \
	scars.so \
	shade.so \
	slope_dist.so \
	sphere-revolve.so \
	tip_blind.so \
	tip_dilation.so \
	tip_map.so \
	tip_model.so \
	tip_reconstruction.so \
	unrotate.so


#############################################################################
# If you know what an alphabet is, please keep the alphabetic order.
# If you have no idea, please return to basic school.
#############################################################################

EXTRA_DIST = \
	makefile.msc

angle_dist_so_SOURCES = angle_dist.c
angle_dist_so_LDFLAGS = $(module_ldflags),angle_dist.so

arithmetic_so_SOURCES = arithmetic.c
arithmetic_so_LDFLAGS = $(module_ldflags),arithmetic.so

basicops_so_SOURCES = basicops.c
basicops_so_LDFLAGS = $(module_ldflags),basicops.so

calibrate_so_SOURCES = calibrate.c
calibrate_so_LDFLAGS = $(module_ldflags),calibrate.so

crosscor_so_SOURCES = crosscor.c
crosscor_so_LDFLAGS = $(module_ldflags),crosscor.so

cwt_so_SOURCES = cwt.c
cwt_so_LDFLAGS = $(module_ldflags),cwt.so

dwt_so_SOURCES = dwt.c
dwt_so_LDFLAGS = $(module_ldflags),dwt.so

dwtanisotropy_so_SOURCES = dwtanisotropy.c
dwtanisotropy_so_LDFLAGS = $(module_ldflags),dwtanisotropy.so

dwtcorrection_so_SOURCES = dwtcorrection.c
dwtcorrection_so_LDFLAGS = $(module_ldflags),dwtcorrection.so

dwtdenoise_so_SOURCES = dwtdenoise.c
dwtdenoise_so_LDFLAGS = $(module_ldflags),dwtdenoise.so

edge_so_SOURCES = edge.c
edge_so_LDFLAGS = $(module_ldflags),edge.so

facet_level_so_SOURCES = facet-level.c
facet_level_so_LDFLAGS = $(module_ldflags),facet-level.so

fit_2d_so_SOURCES = fit_2d.c
fit_2d_so_LDFLAGS = $(module_ldflags),fit_2d.so

fft_so_SOURCES = fft.c
fft_so_LDFLAGS = $(module_ldflags),fft.so

fractal_so_SOURCES = fractal.c
fractal_so_LDFLAGS = $(module_ldflags),fractal.so

fraccor_so_SOURCES = fraccor.c
fraccor_so_LDFLAGS = $(module_ldflags),fraccor.so

gradient_so_SOURCES = gradient.c
gradient_so_LDFLAGS = $(module_ldflags),gradient.so

grain_mark_so_SOURCES = grain_mark.c
grain_mark_so_LDFLAGS = $(module_ldflags),grain_mark.so

grain_rem_threshold_so_SOURCES = grain_rem_threshold.c
grain_rem_threshold_so_LDFLAGS = $(module_ldflags),grain_rem_threshold.so

grain_wshed_so_SOURCES = grain_wshed.c
grain_wshed_so_LDFLAGS = $(module_ldflags),grain_wshed.so

grain_dist_so_SOURCES = grain_dist.c
grain_dist_so_LDFLAGS = $(module_ldflags),grain_dist.so

laplace_so_SOURCES = laplace.c
laplace_so_LDFLAGS = $(module_ldflags),laplace.so

level_so_SOURCES = level.c
level_so_LDFLAGS = $(module_ldflags),level.so

linecorrect_so_SOURCES = linecorrect.c
linecorrect_so_LDFLAGS = $(module_ldflags),linecorrect.so

#nanoindent_mark_so_SOURCES = nanoindent_mark.c
#nanoindent_mark_so_LDFLAGS = $(module_ldflags),nanoindent_mark.so

mask_grow_shrink_so_SOURCES = mask_grow_shrink.c
mask_grow_shrink_so_LDFLAGS = $(module_ldflags),mask_grow_shrink.so

maskcor_so_SOURCES = maskcor.c
maskcor_so_LDFLAGS = $(module_ldflags),maskcor.so

maskops_so_SOURCES = maskops.c
maskops_so_LDFLAGS = $(module_ldflags),maskops.so

median_bg_so_SOURCES = median-bg.c
median_bg_so_LDFLAGS = $(module_ldflags),median-bg.so

outliers_so_SOURCES = outliers.c
outliers_so_LDFLAGS = $(module_ldflags),outliers.so

polylevel_so_SOURCES = polylevel.c
polylevel_so_LDFLAGS = $(module_ldflags),polylevel.so

presentationops_so_SOURCES = presentationops.c
presentationops_so_LDFLAGS = $(module_ldflags),presentationops.so

rotate_so_SOURCES = rotate.c
rotate_so_LDFLAGS = $(module_ldflags),rotate.so

scale_so_SOURCES = scale.c
scale_so_LDFLAGS = $(module_ldflags),scale.so

scars_so_SOURCES = scars.c
scars_so_LDFLAGS = $(module_ldflags),scars.so

shade_so_SOURCES = shade.c
shade_so_LDFLAGS = $(module_ldflags),shade.so

slope_dist_so_SOURCES = slope_dist.c
slope_dist_so_LDFLAGS = $(module_ldflags),slope_dist.so

sphere_revolve_so_SOURCES = sphere-revolve.c
sphere_revolve_so_LDFLAGS = $(module_ldflags),sphere-revolve.so

tip_blind_so_SOURCES = tip_blind.c
tip_blind_so_LDFLAGS = $(module_ldflags),tip_blind.so

tip_dilation_so_SOURCES = tip_dilation.c
tip_dilation_so_LDFLAGS = $(module_ldflags),tip_dilation.so

tip_map_so_SOURCES = tip_map.c
tip_map_so_LDFLAGS = $(module_ldflags),tip_map.so

tip_model_so_SOURCES = tip_model.c
tip_model_so_LDFLAGS = $(module_ldflags),tip_model.so

tip_reconstruction_so_SOURCES = tip_reconstruction.c
tip_reconstruction_so_LDFLAGS = $(module_ldflags),tip_reconstruction.so

unrotate_so_SOURCES = unrotate.c
unrotate_so_LDFLAGS = $(module_ldflags),unrotate.so


INCLUDES = -I$(top_srcdir)
AM_CPPFLAGS = -DG_LOG_DOMAIN=\"Module\"

clean-local:
	rm -f core.* *~
