<!-- ##### SECTION Title ##### -->
gwyexpr

<!-- ##### SECTION Short_Description ##### -->
Arithmetic expression parser and evaluator.

<!-- ##### SECTION Long_Description ##### -->
<para>
#GwyExpr is an expression evaluator, more precisely parser, compiler, and
evaluator. A new #GwyExpr can be created with gwy_expr_new(), then it can be
used to evaluate any number of expressions; when it's no longer needed, it
should be destroyed with gwy_expr_free().
</para>

<para>
Simple arithmetic expressions without variables can be directly evaluated with
gwy_expr_evaluate().
</para>

<para>
Expression with variables have to be compiled first with gwy_expr_compile().
The either gwy_expr_resolve_variables() or gwy_expr_get_variables() can be
used to obtain information what variables are present in the expression
and at which positions (variables are references by position, not name during
final evaluation because of effieiency reasons). Subsequent evaluation with
variable substitution is performed by gwy_expr_execute(). Eventually,
expression can be evaluated on each item of value arrays by
gwy_expr_vector_execute().
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### MACRO GWY_EXPR_ERROR ##### -->
<para>

</para>



<!-- ##### ENUM GwyExprError ##### -->
<para>

</para>

@GWY_EXPR_ERROR_CLOSING_PARENTHESIS: 
@GWY_EXPR_ERROR_EMPTY: 
@GWY_EXPR_ERROR_EMPTY_PARENTHESES: 
@GWY_EXPR_ERROR_GARBAGE: 
@GWY_EXPR_ERROR_INVALID_ARGUMENT: 
@GWY_EXPR_ERROR_INVALID_TOKEN: 
@GWY_EXPR_ERROR_MISSING_ARGUMENT: 
@GWY_EXPR_ERROR_NOT_EXECUTABLE: 
@GWY_EXPR_ERROR_OPENING_PARENTHESIS: 
@GWY_EXPR_ERROR_STRAY_COMMA: 
@GWY_EXPR_ERROR_UNRESOLVED_IDENTIFIERS: 
@GWY_EXPR_ERROR_CONSTANT_NAME: 

<!-- ##### STRUCT GwyExpr ##### -->
<para>

</para>


<!-- ##### FUNCTION gwy_expr_error_quark ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gwy_expr_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gwy_expr_free ##### -->
<para>

</para>

@expr: 


<!-- ##### FUNCTION gwy_expr_evaluate ##### -->
<para>

</para>

@expr: 
@text: 
@result: 
@err: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_compile ##### -->
<para>

</para>

@expr: 
@text: 
@err: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_resolve_variables ##### -->
<para>

</para>

@expr: 
@n: 
@names: 
@indices: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_get_variables ##### -->
<para>

</para>

@expr: 
@names: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_execute ##### -->
<para>

</para>

@expr: 
@values: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_vector_execute ##### -->
<para>

</para>

@expr: 
@n: 
@data: 
@result: 


<!-- ##### FUNCTION gwy_expr_define_constant ##### -->
<para>

</para>

@expr: 
@name: 
@value: 
@err: 
@Returns: 


<!-- ##### FUNCTION gwy_expr_undefine_constant ##### -->
<para>

</para>

@expr: 
@name: 
@Returns: 


