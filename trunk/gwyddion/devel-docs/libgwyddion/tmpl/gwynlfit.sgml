<!-- ##### SECTION Title ##### -->
gwynlfit

<!-- ##### SECTION Short_Description ##### -->
Marquardt-Levenberg nonlinear least square fitter

<!-- ##### SECTION Long_Description ##### -->
<para>
A new Marquardt-Levenberg nonlinear least square fitter can be created with
gwy_math_nlfit_new(), specifying the function to fit (as GwyNLFitFunc) and
its derivation (as GwyNLFitDerFunc). For functions for whose analytic
derivation is not available or very impractical, gwy_math_nlfit_derive()
(computing the derivation numerically) can be used instead.
</para>

<para>
A fitter can be then repeatedly used on different data either in
gwy_math_nlfit_fit(), or gwy_math_nlfit_fit_with_fixed() when there are some
fixed parameters. Arbitrary additional (non-fitting) parameters can be passed
to the fited function in <parameter>user_data</parameter>.
</para>

<para>
After a successfull fit additional fit information can be obtained with
gwy_math_nlfit_get_dispersion(), gwy_math_nlfit_get_correlations(),
gwy_math_nlfit_get_sigma(). Note these functions may be used only after
a successfull fit. When a fitter is no longer needed, it should be freed with
gwy_math_nlfit_free().
</para>

<para>
Several common functions are also available as fitting presets that can be
fitted with gwy_math_nlfit_fit_preset(). Each one can be identified by
a unique name or a numeric id (the latter one may however change between
releases) the number of presets can be obtained with
gwy_math_nlfit_get_npresets(). Preset properties can be obtained with
functions like gwy_math_nlfit_get_preset_nparams() or
gwy_math_nlfit_get_preset_formula().
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### USER_FUNCTION GwyNLFitFunc ##### -->
<para>

</para>

@x: 
@n_param: 
@param: 
@user_data: 
@fres: 
@Returns: 
<!-- # Unused Parameters # -->
@n_par: 
@params: 


<!-- ##### USER_FUNCTION GwyNLFitDerFunc ##### -->
<para>

</para>

@x: 
@n_param: 
@param: 
@fixed_param: 
@fmarq: 
@user_data: 
@deriv: 
@dres: 
<!-- # Unused Parameters # -->
@i: 
@n_par: 
@dat_x: 
@params: 


<!-- ##### STRUCT GwyNLFitter ##### -->
<para>

</para>

@fmarq: 
@dmarq: 
@maxiter: 
@eval: 
@covar: 
@dispersion: 
@mfi: 
@mdec: 
@minc: 
@mtol: 

<!-- ##### FUNCTION gwy_math_nlfit_new ##### -->
<para>

</para>

@ff: 
@df: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_free ##### -->
<para>

</para>

@nlfit: 


<!-- ##### FUNCTION gwy_math_nlfit_fit ##### -->
<para>

</para>

@nlfit: 
@n_dat: 
@x: 
@y: 
@n_param: 
@param: 
@user_data: 
@Returns: 
<!-- # Unused Parameters # -->
@weight: 
@n_par: 


<!-- ##### FUNCTION gwy_math_nlfit_fit_full ##### -->
<para>

</para>

@nlfit: 
@n_dat: 
@x: 
@y: 
@weight: 
@n_param: 
@param: 
@fixed_param: 
@link_map: 
@user_data: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_get_max_iterations ##### -->
<para>

</para>

@nlfit: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_set_max_iterations ##### -->
<para>

</para>

@nlfit: 
@maxiter: 


<!-- ##### FUNCTION gwy_math_nlfit_get_dispersion ##### -->
<para>

</para>

@nlfit: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_get_correlations ##### -->
<para>

</para>

@nlfit: 
@par1: 
@par2: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_get_sigma ##### -->
<para>

</para>

@nlfit: 
@par: 
@Returns: 


<!-- ##### FUNCTION gwy_math_nlfit_derive ##### -->
<para>

</para>

@x: 
@n_param: 
@param: 
@fixed_param: 
@ff: 
@user_data: 
@deriv: 
@dres: 
<!-- # Unused Parameters # -->
@i: 
@n_par: 


