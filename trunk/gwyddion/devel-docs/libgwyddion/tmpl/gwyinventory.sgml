<!-- ##### SECTION Title ##### -->
GwyInventory

<!-- ##### SECTION Short_Description ##### -->
Ordered item inventory, indexed by both name and position

<!-- ##### SECTION Long_Description ##### -->
<para>
#GwyInventory is a uniform container that offers both hash table and array
(sorted or unsorted) interfaces.  Both types of read access are fast,
operations that modify it may be slower.  Inventory can also maintain
a notion of default item.
</para>

<para>
#GwyInventory can be used both as an actual container for some data, or just
wrap a static array with a the same interface so the actual storage is opaque
to inventory user.  The former kind of inventories can be created with
gwy_inventory_new() or gwy_inventory_new_filled(); constant inventory is
created with gwy_inventory_new_from_array().  Contantess of an inventory can
be tested with gwy_inventory_is_const().
</para>

<para>
Possible operations with data items stored in an inventory are specified upon
inventory creation with #GwyInventoryItemType structure.  Not all fields are
mandatory, with items allowing more operations the inventory is more capable
too.  For example, if items offer a method to make copies,
gwy_inventory_new_item() can be used to directly create new items in the
inventory (this capability can be tested with
gwy_inventory_can_make_copies()).
</para>

<para>
Item can have `traits', that is data that can be obtained generically.
They are similar to #GObject properties.  Actually, if items are objects,
they should simply map object properties to traits.  But it's possible to
define traits for simple structures.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GwyContainer
</para>

<!-- ##### STRUCT GwyInventoryItemType ##### -->
<para>

</para>

@type: 
@watchable_signal: 
@is_fixed: 
@get_name: 
@compare: 
@rename: 
@dismantle: 
@copy: 
@get_traits: 
@get_trait_name: 
@get_trait_value: 

<!-- ##### STRUCT GwyInventory ##### -->
<para>

</para>


<!-- ##### SIGNAL GwyInventory::default-changed ##### -->
<para>

</para>

@gwyinventory: the object which received the signal.

<!-- ##### SIGNAL GwyInventory::item-deleted ##### -->
<para>

</para>

@gwyinventory: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GwyInventory::item-inserted ##### -->
<para>

</para>

@gwyinventory: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GwyInventory::item-updated ##### -->
<para>

</para>

@gwyinventory: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GwyInventory::items-reordered ##### -->
<para>

</para>

@gwyinventory: the object which received the signal.
@arg1: 

<!-- ##### STRUCT GwyInventoryClass ##### -->
<para>

</para>

@parent_class: 
@item_inserted: 
@item_deleted: 
@item_updated: 
@items_reordered: 
@default_changed: 

<!-- ##### FUNCTION gwy_inventory_new ##### -->
<para>

</para>

@itype: 
@Returns: 
<!-- # Unused Parameters # -->
@item_type: 


<!-- ##### FUNCTION gwy_inventory_new_filled ##### -->
<para>

</para>

@itype: 
@nitems: 
@items: 
@Returns: 
<!-- # Unused Parameters # -->
@item_type: 


<!-- ##### FUNCTION gwy_inventory_new_from_array ##### -->
<para>

</para>

@itype: 
@item_size: 
@nitems: 
@items: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_n_items ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_can_make_copies ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_is_const ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_item_type ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_item ##### -->
<para>

</para>

@inventory: 
@name: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_item_or_default ##### -->
<para>

</para>

@inventory: 
@name: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_nth_item ##### -->
<para>

</para>

@inventory: 
@n: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_item_position ##### -->
<para>

</para>

@inventory: 
@name: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_foreach ##### -->
<para>

</para>

@inventory: 
@function: 
@user_data: 
<!-- # Unused Parameters # -->
@funcition: 


<!-- ##### FUNCTION gwy_inventory_find ##### -->
<para>

</para>

@inventory: 
@predicate: 
@user_data: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_set_default_item_name ##### -->
<para>

</para>

@inventory: 
@name: 


<!-- ##### FUNCTION gwy_inventory_get_default_item_name ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_get_default_item ##### -->
<para>

</para>

@inventory: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_item_updated ##### -->
<para>

</para>

@inventory: 
@name: 


<!-- ##### FUNCTION gwy_inventory_nth_item_updated ##### -->
<para>

</para>

@inventory: 
@n: 


<!-- ##### FUNCTION gwy_inventory_restore_order ##### -->
<para>

</para>

@inventory: 


<!-- ##### FUNCTION gwy_inventory_forget_order ##### -->
<para>

</para>

@inventory: 


<!-- ##### FUNCTION gwy_inventory_insert_item ##### -->
<para>

</para>

@inventory: 
@item: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_insert_nth_item ##### -->
<para>

</para>

@inventory: 
@item: 
@n: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_delete_item ##### -->
<para>

</para>

@inventory: 
@name: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_delete_nth_item ##### -->
<para>

</para>

@inventory: 
@n: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_rename_item ##### -->
<para>

</para>

@inventory: 
@name: 
@newname: 
@Returns: 


<!-- ##### FUNCTION gwy_inventory_new_item ##### -->
<para>

</para>

@inventory: 
@name: 
@newname: 
@Returns: 


