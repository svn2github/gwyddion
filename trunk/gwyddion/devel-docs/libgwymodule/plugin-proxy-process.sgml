<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="plugin-proxy-process" revision="@(#) $Id$">
  <refmeta>
    <refentrytitle>Data Process Plug-ins</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>Gwyddion</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>Data Process Plug-ins</refname>
    <refpurpose>
      XXX
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Registration</title>
    <para>
      When the plug-in is called with <literal>register</literal> as
      its first argument it should dump following information about self to
      standard output (each on a separate line) and terminate:
    </para>
    <itemizedlist>
      <listitem>plug-in name</listitem>
      <listitem>menu path</listitem>
      <listitem>run modes</listitem>
    </itemizedlist>
    <para>
      This information correspond to similar
      <link linkend="libgwymodule-gwymodule-process">data process module</link>
      information.  All fields are case-sensitive.  The run modes line
      consists of a space-separated sublist of:
      <simplelist>
        <member><literal>interactive</literal></member>
        <member><literal>noninteractive</literal></member>
        <member><literal>modal</literal></member>
        <member><literal>with_defaults</literal></member>
      </simplelist>
      Note however, interactive plug-ins are not supported (yet), only modal
      ones.
    </para>
    <para>
      So the output of plugin <command>my_plugin</command> when run as
      <command>my_plugin register</command> could look:
    </para>
    <screen><![CDATA[
my_plugin
/_Plug-ins/My Plug-in
noninteractive with_defaults
]]></screen>
  </refsect1>
  <refsect1>
    <title>Data Processing</title>
    <para>
      When the plug-in is called with <literal>run</literal> as its first
      argument then the second argument is equal to actual run mode (one of
      those it printed during registration) and the third one is the name
      of a <link linkend="plugin-proxy-dump">dump file</link> to process.
    </para>
    <para>
      The plug-in reads the data from dump file, mangles them at its pleasure
      and then overwrite the very same file with the result (do not forget to
      use <function>ftruncate()</function> first or its Win32 equivalent to
      avoid surprises).
    </para>
    <para>
      The plug-in does not need to write back fields it didn't modify,
      values from the original data are used then.
      E.g., when the resolution does not change, it is enough to dump the
      data alone.  This also means it can safely ignore anything it does
      not understand in the dump file.
    </para>
  </refsect1>
</refentry>


