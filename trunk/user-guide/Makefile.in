# XXX: needs working catalog setup, otherwise everything is fetched from
# network!
export

VERSION = @PACKAGE_VERSION@
BASENAME = @PACKAGE_TARNAME@
PACKAGE = @PACKAGE_SHORTNAME@

GMAKE = @GMAKE@
GSED = @GSED@
XSLTPROC = @XSLTPROC@ --xinclude
DBLATEX = @DBLATEX@ --input-format=xml --texinputs=$(abspath .) --fig-path=images --xslt="@XSLTPROC@" --debug
INKSCAPE = @INKSCAPE@ --without-gui --export-area-drawing
#HTML2TXT = @LYNX@ -force_html -dump -nolist

DISTNAME = $(BASENAME)-$(VERSION)
DISTNAMEXHTML = $(BASENAME)-xhtml-$(VERSION)
MAIN_XML_SOURCE = xml/$(PACKAGE).xml
XML_SOURCES := $(wildcard xml/*.xml)
FORMULA_SOURCES := $(wildcard formulas/*.tex)
EQ_SOURCES := $(shell grep -l '<textobject role="tex">' $(XML_SOURCES))
IMAGES := $(shell $(GSED) -e 's/.*<\(imagedata\|inlinegraphic\) [^>]*fileref='"'"'\([^/'"'"']*\)'"'"'.*/\2/' -e t -e d xml/*.xml | sort | uniq) stacked3.png
PNG_IMAGES := $(filter-out eq-%.png,$(IMAGES))
IMAGE_IMAGES := $(patsubst %,images/%,$(PNG_IMAGES))
SVG_IMAGES = \
	boundary_length.svg \
	grain-bounding-dims.svg \
	inclination.svg \
	unrotate-symmetries.svg
BUILT_IMAGES := $(patsubst %.svg,%.png,$(SVG_IMAGES))
# Distribute also BUILT_IMAGES, do not expect everyone to have Inkscape with
# the right fonts.
DIST_IMAGES := $(patsubst %,images/%,$(PNG_IMAGES) $(SVG_IMAGES))

XSL_STYLES = xhtml.xsl eq-extract.xsl dblatex.xsl \
	version-greater-or-equal.xsl docbook-xsl-version.xsl
CSS_STYLES = user-guide.css
TEX_STYLES = user-guide.sty
BUILD_FILES = README Makefile.in user-guide.iss.in \
	aclocal.m4 configure configure.ac

@HTML_TRUE@html_target = xhtml
@HTML_FALSE@html_target =
@PDF_TRUE@pdf_target = pdf
@PDF_FALSE@pdf_target =

ALL_TARGETS = $(html_target) $(pdf_target)

all: $(ALL_TARGETS)

Makefile: Makefile.in ./config.status
	./config.status Makefile

pdf: $(PACKAGE).pdf

@PDF_TRUE@$(PACKAGE).pdf: $(XML_SOURCES) $(IMAGE_IMAGES) $(TEX_STYLES) dblatex.xsl
@PDF_TRUE@	rm -rf pdf
@PDF_TRUE@	mkdir pdf
@PDF_TRUE@	$(DBLATEX) --tmpdir=pdf --pdf --xsl-user=dblatex.xsl --output=$@ $(MAIN_XML_SOURCE)

%.txt: %.html
	$(HTML2TXT) $< >$@

xhtml: xhtml.stamp

# FIXME: Avoid building if only images change.  Depend on CSS in xhtml too.
@HTML_TRUE@xhtml.stamp: formulas $(XML_SOURCES) $(IMAGE_IMAGES) xhtml.xsl
@HTML_TRUE@	test -d xhtml || mkdir xhtml
@HTML_TRUE@	$(XSLTPROC) xhtml.xsl $(MAIN_XML_SOURCE)
@HTML_TRUE@	$(GSED) -i -e 's#<html xmlns="[^"]*">#<html>#' xhtml/*.html
@HTML_TRUE@	@cp $(patsubst %,images/%,$(PNG_IMAGES)) xhtml
@HTML_TRUE@	cp user-guide.css xhtml
@HTML_TRUE@	touch $@

formulas: formulas.stamp

@HTML_TRUE@formulas.stamp: eq-extract.xsl $(EQ_SOURCES) $(MAIN_XML_SOURCE)
@HTML_TRUE@	$(XSLTPROC) eq-extract.xsl $(MAIN_XML_SOURCE)
@HTML_TRUE@	+cd ./formulas && $(GMAKE)
@HTML_TRUE@	test -d xhtml || mkdir xhtml
@HTML_TRUE@	cp formulas/eq-*.png xhtml
@HTML_TRUE@	touch $@

@PNG_TRUE@fixpngres: fixpngres.c
@PNG_TRUE@	$(CC) @PNG_CFLAGS@ @PNG_LIBS@ -o fixpngres fixpngres.c

# XXX: The `cd images' trick is necessary as inkscape fails to save images into
# another directory
@SVG_TRUE@images/%.png: images/%.svg
@SVG_TRUE@	cd images && \
@SVG_TRUE@	    $(INKSCAPE) --export-dpi=150 --export-background=white \
@SVG_TRUE@	        --export-png="$*.png" --file="$*.svg"

@SVG_TRUE@%.pdf: %.svg
@SVG_TRUE@	cd images && \
@SVG_TRUE@	    $(INKSCAPE) --export-pdf="$*.png" --file="$*.svg"

clean:
	+cd ./formulas && $(GMAKE) clean
	-rm -rf xhtml *.stamp xml/*~ *~ fixpngres
	-rm -rf $(PACKAGE).pdf pdf

dist:
	-rm -rf $(DISTNAME)
	mkdir $(DISTNAME) $(DISTNAME)/xml $(DISTNAME)/images
	cp $(BUILD_FILES) $(XSL_STYLES) $(CSS_STYLES) $(TEX_STYLES) $(DISTNAME)
	cp $(DIST_IMAGES) $(DISTNAME)/images
	cp $(XML_SOURCES) $(DISTNAME)/xml
	+cd ./formulas && $(GMAKE) dist
	tar -zcf $(DISTNAME).tar.gz $(DISTNAME)
	rm -rf $(DISTNAME)

dist-xhtml: xhtml
	@fail=; \
	for x in $(IMAGES); do \
		if test \! -f xhtml/$$x; then \
			echo Missing image: $$x 1>&2; \
			fail=fail; \
		fi; \
	done; \
	test -z "$$fail"
	-rm -rf $(DISTNAMEXHTML)
	cp -R xhtml $(DISTNAMEXHTML)
	cp user-guide.iss $(DISTNAMEXHTML)
	chmod a+rx $(DISTNAMEXHTML)
	chmod a+r $(DISTNAMEXHTML)/*
	tar -zcf $(DISTNAMEXHTML).tar.gz $(DISTNAMEXHTML)
	-rm -rf $(DISTNAMEXHTML)

version:
	d=`date --iso`; \
	$(GSED) -i '/AC_INIT/s/[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}/'"$$d/" configure.ac
	autoconf && ./configure

distclean: clean
	+cd ./formulas && $(GMAKE) distclean
	-rm -fr Makefile config.status config.log autom4te.cache user-guide.iss

help:
	@echo "all          Compile User guide to all available formats ($(ALL_TARGETS))"
@HTML_TRUE@	@echo "xhtml        Compile User guide to XHTML"
@HTML_FALSE@	@echo "xhtml        Compile User guide to XHTML (not available)"
@PDF_TRUE@	@echo "pdf          Compile User guide to PDF"
@PDF_FALSE@	@echo "pdf          Compile User guide to PDF (not available)"
	@echo "dist         Create tarball with DocBook sources"
	@echo "dist-xhtml   Create tarball with ready to read XHTML User guide"
@PNG_TRUE@	@echo "fixpngres    Build fixpngres tool"
@PNG_FALSE@	@echo "fixpngres    Build fixpngres tool (not available)"
	@echo "version      Update version number to current date"

.PHONY: all clean dist pdf xhtml dist-xhtml help version distclean
.PRECIOUS: Makefile
