LANGUAGES = @LANGUAGES@
XHTML_ENABLE = @XHTML_ENABLE@
PDF_ENABLE = @PDF_ENABLE@
MAN_ENABLE = @MAN_ENABLE@
PNG_ENABLE = @PNG_ENABLE@
SVG_ENABLE = @SVG_ENABLE@

VERSION = @PACKAGE_VERSION@
BASENAME = @PACKAGE_TARNAME@
PACKAGE = @PACKAGE_SHORTNAME@
DISTNAME = $(BASENAME)-$(VERSION)

expand_langs = $(patsubst %,$(1),$(LANGUAGES))
gather_langs = $(sort $(foreach x,$(call expand_langs,$(1)_%),$($(x))))

GMAKE = @GMAKE@
GSED = @GSED@
PYTHON = @PYTHON@
XSLTPROC_CMD = @XSLTPROC@ --xinclude
DBLATEX_CMD = @DBLATEX@ --input-format=xml --texinputs=$(abspath .) --fig-path=images --xslt="@XSLTPROC@" --debug
INKSCAPE_CMD = @INKSCAPE@ --without-gui --export-area-drawing
XML_EXTRACT = $(PYTHON) ./xml-extract.py
RENDER = $(SHELL) ./render.sh

FORMULA_TEMPLATES := header.tex footer.tex defs.tex
FORMULA_SUPPORT := $(patsubst %,formulas/%,$(FORMULA_TEMPLATES) pngsize render.sh)
IMAGES_EXTRA = PNG:images/stacked3.png

IMAGES_SVG = \
	images/boundary-length.svg \
	images/gaussian-acf.svg \
	images/gaussian-hhcf.svg \
	images/gaussian-psdf.svg \
	images/grain-bounding-dims.svg \
	images/inclination.svg \
	images/profile-interpolation.svg \
	images/step-edge.svg \
	images/surface-area-vertices.svg \
	images/triangulation.svg \
	images/unrotate-symmetries.svg \
	images/volume-pixel-weights.svg \
	images/wavelet-daubechies20.svg \
	images/wavelet-daubechies4.svg \
	images/wavelet-haar.svg \
	images/windowing-win.svg \
	images/windowing-fft.svg

IMAGES_PNG_SOURCE = \
	images/profile-interpolation-image.png \
	images/triangulation-field.png \
	images/triangulation-linear.png \
	images/triangulation-round.png

MAN_PAGES = gwyddion.1 gwyddion-thumbnailer.1

XSL_STYLES = xhtml.xsl dblatex.xsl man.xsl \
	version-greater-or-equal.xsl docbook-xsl-version.xsl
CSS_STYLES = user-guide.css
TEX_STYLES = user-guide.sty
BUILD_FILES = README Makefile.in user-guide.iss.in \
	aclocal.m4 configure configure.ac xml-extract.py

ALL_TARGETS = $(XHTML_ENABLE) $(PDF_ENABLE) $(MAN_ENABLE)

all: $(ALL_TARGETS)

Makefile: Makefile.in ./config.status
	./config.status Makefile

xhtml: common/pngsize
	for x in $(LANGUAGES); do \
		cd $$x && $(MAKE) xhtml; \
		cd ..; \
	done

pdf:
	for x in $(LANGUAGES); do \
		cd $$x && $(MAKE) pdf; \
		cd ..; \
	done

ifeq ($(PNG_ENABLE),png)
common/fixpngres: common/fixpngres.c
	$(CC) @PNG_CFLAGS@ @PNG_LIBS@ -o common/fixpngres common/fixpngres.c
endif

common/pngsize: common/pngsize.c
	cd common && $(CC) -o pngsize pngsize.c

clean:
	-@rm -f formulas/TEMP-* formulas/*.stamp formulas/eq-*.tex
	-@rm -f formulas/eq-*.png images/eq-*.png
	-@rm -f $(IMAGES_BUILT)
	-rm -rf $(CLEAN_DIRS)
	-rm -f *.stamp *.deps fixpngres formulas/pngsize *~ */*~
	-rm -f $(call expand_langs,$(PACKAGE)-%.pdf) $(MAN_PAGES)

distclean: clean
	-rm -f formulas/render.sh
	-rm -fr Makefile config.status config.log autom4te.cache user-guide.iss

dist:
	-rm -rf $(DISTNAME)
	mkdir $(DISTNAME) $(DISTNAME)/formulas $(DISTNAME)/images
	cp $(BUILD_FILES) $(XSL_STYLES) $(CSS_STYLES) $(TEX_STYLES) $(DISTNAME)
	cp $(IMAGES_DIST) $(DISTNAME)/images
	cp common/pngsize.c common/render.sh.in $(DISTNAME)/common
	cp $(patsubst %,formulas/%,$(FORMULA_TEMPLATES)) $(DISTNAME)/formulas
	for x in $(LANGUAGES); do \
	    mkdir $(DISTNAME)/xml_$$x; \
	    cp xml_$$x/*.xml $(DISTNAME)/xml_$$x/; \
	done
	tar -zcf $(DISTNAME).tar.gz $(DISTNAME)
	rm -rf $(DISTNAME)

# FIXME: Distribute all langs
dist-xhtml: xhtml
	for x in $(LANGUAGES); do \
	    d=$(BASENAME)-xhtml-$$x-$(VERSION); \
	    rm -rf $$d; \
	    mkdir $$d; \
	    cp xhtml_$$x/* $$d; \
	    ll=`echo $$x | $(GSED) 's/en/English/;s/fr/French/;s/ru/Russian/'`; \
	    sed "s/@LANGUAGE@/$$ll/g" user-guide.iss >$$d/user-guide.iss; \
	    chmod 755 $$d; \
	    chmod 644 $$d/*; \
	    tar -zcf $$d.tar.gz $$d; \
	    rm -rf $$d; \
	done

dist-pdf: pdf
	for x in $(LANGUAGES); do \
	    cp -f user-guide-$$x.pdf $(BASENAME)-$$x-$(VERSION).pdf; \
	done

# FIXME: We need to figure out versioning of translations.
version:
	d=`date --iso`; \
	$(GSED) -i '/AC_INIT/s/[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}/'"$$d/" configure.ac; \
	$(GSED) -i 's/\(^ *Version\) [0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}/\1 '"$$d/" xml_en/user-guide.xml
	autoconf && ./configure

help:
	@echo "all          Compile User guide to all available formats ($(ALL_TARGETS))"
ifeq ($(XHTML_ENABLE),xhtml)
	@echo "xhtml        Compile User guide to XHTML"
else
	@echo "xhtml        Compile User guide to XHTML (not available)"
endif
ifeq ($(PDF_ENABLE),pdf)
	@echo "pdf          Compile User guide to PDF"
else
	@echo "pdf          Compile User guide to PDF (not available)"
endif
ifeq ($(MAN_ENABLE),man)
	@echo "man          Compile Unix manual pages for commands"
else
	@echo "man          Compile Unix manual pages for commands (not available)"
endif
	@echo "dist         Create tarball with DocBook sources"
	@echo "dist-xhtml   Create tarball with ready to read XHTML User guide"
ifeq ($(PNG_ENABLE),png)
	@echo "fixpngres    Build fixpngres tool"
else
	@echo "fixpngres    Build fixpngres tool (not available)"
endif
	@echo "version      Update version number to current date"

.PHONY: \
	all help version clean distclean \
	dist dist-xhtml dist-pdf \
	xhtml xhtml_en xhtml_fr $(call expand_langs,xhtml_%) \
	pdf pdf_en pdf_fr $(call expand_langs,pdf_%) \
	man

.PRECIOUS: Makefile

# vim: set ts=4 sw=4 noet :
