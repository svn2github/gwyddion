<?xml version='1.0' encoding='utf-8'?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd'>
<sect1 id='interpolation' xmlns:xi='http://www.w3.org/2001/XInclude'>
  <title>Interpolation</title>
  <indexterm><primary>interpolation</primary></indexterm>
  <para>
    Most geometrical transformations, such as rotation, scaling or
    <link linkend='drift-compensation'>drift compensation</link> utilize or
    depend on data interpolation.  Also some other operations, e.g.
    <link linkend='profile'>profile extraction</link>, can work with values
    between individual pixels and hence involve interpolation.  Since SPM data
    are relatively coarsely sampled compared to measured details (full images
    are typically only a few hundred pixels in width and height), the
    interpolation method used can become critical for proper quantitative
    analysis of data properties.  Gwyddion implements several interpolation
    methods [<link linkend='interpolation-ref-1'>1</link>]
    and the user can choose which method to use for most of the modules using
    interpolation.
  </para>
  <para>
    Here, we describe the principles and properties of one-dimensional
    interpolation methods.  All implemented two-dimensional interpolation
    methods are separable and thus simply composed of the corresponding
    one-dimensional methods. The following interpolation method are currently
    available:
  </para>
  <variablelist>
    <varlistentry id='interpolation-round'>
      <indexterm><primary>round interpolation</primary></indexterm>
      <indexterm><primary>nearest neighbourhood interpolation</primary></indexterm>
      <term>Round</term>
      <listitem>
        <para>
          Round interpolation (also called nearest neighbourhood
          interpolation) is the simplest method – it just takes rounded value
          of the expected position and finds therefore the closest data value
          at integer position.
          Its polynomial degree is 0, regularity
          <xi:include href="eqi-C-to-minus-1.xml"/>
          and order 1.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-linear'>
      <indexterm><primary>linear interpolation</primary></indexterm>
      <term>Linear</term>
      <listitem>
        <para>
          Linear interpolation is a linear interpolation
          between the two closest data values. The value
          <xi:include href="eqi-z.xml"/> at point of relative position
          <xi:include href="eqi-x.xml"/> is obtained as
          <xi:include href="eq-interpolation-linear.xml"/>
          where <xi:include href="eqi-z_0.xml"/> and
          <xi:include href="eqi-z_1.xml"/> are values at the preceding and
          following points, respectively.
          Its polynomial degree is 1, regularity
          <xi:include href="eqi-C-to-0.xml"/> and order 2.  It is identical to
          the second-order B-spline.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-key'>
      <indexterm><primary>Key interpolation</primary></indexterm>
      <term>Key</term>
      <listitem>
        <para>
          Key interpolation (more precisely Key's interpolation with
          <xi:include href="eqi-a-is-minus-1-over-2.xml"/>
          which has the highest interpolation order) makes use also of values
          in the before-preceding and after-following points
          <xi:include href="eqi-z_minus-1.xml"/> and
          <xi:include href="eqi-z_2.xml"/>, respectively.  In other words it
          has support of length 4. The value is then obtained as
          <xi:include href="eq-interpolation-w1234.xml"/>
          where
          <xi:include href="eq-interpolation-key.xml"/>
          are the interpolation weights.
          Key's interpolation degree is 3, regularity
          <xi:include href="eqi-C-to-1.xml"/> and order 3.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-schaum'>
      <indexterm><primary>Schaum interpolation</primary></indexterm>
      <term>Schaum</term>
      <listitem>
        <para>
          Schaum interpolation (more precisely fourth-order Schaum) has also
          support of length 4.  The interpolation weights are
          <xi:include href="eq-interpolation-schaum.xml"/>
          Its polynomial degree is 3, regularity
          <xi:include href="eqi-C-to-0.xml"/> and order 4.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-nna'>
      <indexterm><primary>NNA interpolation</primary></indexterm>
      <term>NNA</term>
      <listitem>
        <para>
          Nearest neighbour approximation is again calculated from the
          closest four data values but unlike all others it is not
          piecewise-polynomial. The interpolation weights are
          <xi:include href="eq-interpolation-nna.xml"/>
          for <xi:include href="eqi-k-is-minus-1-to-2.xml"/>, where
          <xi:include href="eqi-r_minus-1-is-1-plus-x.xml"/>,
          <xi:include href="eqi-r_0-is-x.xml"/>,
          <xi:include href="eqi-r_1-is-1-minus-x.xml"/>,
          <xi:include href="eqi-r_2-is-2-minus-x.xml"/>.
          Its order is 1.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-bspline'>
      <indexterm><primary>B-spline interpolation</primary></indexterm>
      <term>B-spline</term>
      <listitem>
        <para>
          The weights are
          <xi:include href="eq-interpolation-bspline.xml"/>
          However, they are not used with directly function values as above,
          but with interpolation coefficients calculated from function
          values [<link linkend='interpolation-ref-1'>1</link>].
          Its polynomial degree is 3, regularity
          <xi:include href="eqi-C-to-2.xml"/> and order 4.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry id='interpolation-omoms'>
      <indexterm><primary>O-MOMS interpolation</primary></indexterm>
      <term>O-MOMS</term>
      <listitem>
        <para>
          The weights are
          <xi:include href="eq-interpolation-omoms.xml"/>
          However, they are not used directly with function values as above,
          but with interpolation coefficients calculated from function
          values [<link linkend='interpolation-ref-1'>1</link>].
          Its polynomial degree is 3, regularity
          <xi:include href="eqi-C-to-0.xml"/> and order 4.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <informalfigure id='fig-interpolations'>
    <mediaobject>
      <imageobject>
        <imagedata fileref='interpolation.png' format='PNG'/>
      </imageobject>
      <textobject>
        <phrase>2D interpolation examples</phrase>
      </textobject>
      <caption>
        Illustration of the available interpolation types (the original
        pixels are obvious on the result of Round interpolation).  All images
        have identical false color map ranges.
      </caption>
    </mediaobject>
  </informalfigure>
  <sect2 id='interpolation-ref'>
    <title>References</title>
    <para id='interpolation-ref-1'>
      [1] P. Thévenaz, T. Blu, M. Unser: Interpolation revisited.
      IEEE Transactions on medical imaging, Volume 10, Number 7, July 2000,
      739
    </para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
