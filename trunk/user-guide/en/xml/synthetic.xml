<?xml version='1.0' encoding='utf-8'?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
               'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd'>
<sect1 id='synthetic' xmlns:xi='http://www.w3.org/2001/XInclude'>
  <title>Synthetic Surfaces</title>
  <para>
    Beside functions for analysis of measured data, Gwyddion provides
    several generators of artificial surfaces that can be used for testing or
    simulations also outside Gwyddion.
  </para>
  <para>
    All the surface generators share a certain set of parameters, determining
    the dimensions and scales of the created surface and the random number
    generator controls.  These parameters are described below, the parameters
    specific to each generator are described in the corresponding subsections.
  </para>
  <para>
    Image parameters:
  </para>
  <variablelist>
    <varlistentry>
      <term>
        <guilabel>Horizontal, Vertical size</guilabel>
      </term>
      <listitem>
        <para>
          The horizontal and vertical resolution of the generated surface in
          pixels.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Square image</guilabel>
      </term>
      <listitem>
        <para>
          This option, when enabled, forces the horizontal and vertical
          resolution to be identical.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Width, Height</guilabel>
      </term>
      <listitem>
        <para>
          The horizontal and vertical physical dimensions of the generated
          surface in selected units.  Note square pixels are assumed so,
          changing one causes the other to be recalculated.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Dimension, Value units</guilabel>
      </term>
      <listitem>
        <para>
          Units of the lateral dimensions (<guilabel>Width</guilabel>,
          <guilabel>Height</guilabel>) and of the values (heights).  The units
          chosen here also determine the units of non-dimensionless parameters
          of the individual generators.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guibutton><guilabel>Take Dimensions from Current Channel</guilabel></guibutton>
      </term>
      <listitem>
        <para>
          Clicking this button fills all the above parameters according to
          the current channel.
        </para>
        <para>
          Note that while the units of values are updated, the value scale is
          defined by generator-specific parameters that might not be directly
          derivable from the statistical properties of the current channel.
          Hence these parameters are not recalculated.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Replace the current channel</guilabel>
      </term>
      <listitem>
        <para>
          This option has two effects.  First, it causes the dimensions and
          scales to be automatically set to those of the current channel.
          Second, it makes the generated surface replace the current channel
          instead of creating a new channel.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Start from the current channel</guilabel>
      </term>
      <listitem>
        <para>
          This option has two effects.  First, it causes the dimensions and
          scales to be automatically set to those of the current channel.
          Second, it makes the generator to start from the surface contained
          in the current channel and modify it instead of starting from a flat
          surface.  Note this does not affect whether the result actually goes
          to the current channel or a new channel is created.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    Random generator controls:
  </para>
  <variablelist>
    <varlistentry>
      <term>
        <guilabel>Random seed</guilabel>
      </term>
      <listitem>
        <para>
          The random number generator seed.  Choosing the same parameters and
          resolutions and the same random seed leads to the same surface, even
          on different computers.  Different seeds lead to different surfaces
          with the same overall characteristics given by the generator
          parameters.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guibutton><guilabel>New</guilabel></guibutton>
      </term>
      <listitem>
        <para>
          Replaces the seed with a random number.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <guilabel>Randomize</guilabel>
      </term>
      <listitem>
        <para>
          Enabling this option makes the seed to be chosen randomly every time
          the generator is run.  This permits to conveniently re-run the
          generator with a new seed simply by pressing <keycap>Ctrl-F</keycap>
          (see <link linkend='keyboard-shortcuts'>keyboard shortcuts</link>).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <sect2 id='spectral-synthesis'>
    <title>Spectral</title>
    <para>
      Spectral synthesis module creates randomly rough surfaces by constructing
      the Fourier transform of the surface according to specified parameters
      and then performing the inverse Fourier transform to obtain the real
      surface.  The generated surfaces are periodic (i.e. perfectly tilable).
    </para>
    <para>
      The Fourier image parameters define the shape of the PSDF, i.e. the
      Fourier coefficient modulus, the phases are chosen randomly.  At present,
      all generated surfaces are isotropic, i.e. the PSDF is radially
      symmetric.
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>RMS</guilabel>
        </term>
        <listitem>
          <para>
            The root mean square value of the heights (or of the differences
            from the mean plane which, however, always is the
            <xi:include href="eqi-z-is-0.xml"/> plane).  Button
            <guilabel>Like Current Channel</guilabel> sets the RMS value to
            those of the current channel.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Minimum, maximum frequency</guilabel>
        </term>
        <listitem>
          <para>
            The minimum and maximum spatial frequency.  Increasing the minimum
            frequency leads to <quote>flattening</quote> of the image, i.e. to
            removal of large features.  Decreasing the maximum frequency
            limits the sharpness of the features.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Enable Gaussian multiplier</guilabel>
        </term>
        <listitem>
          <para>
            Enables the multiplication of the Fourier coefficients by a
            Gaussian function that in the real space corresponds to the
            convolution with a Gaussian.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Enable Lorentzian multiplier</guilabel>
        </term>
        <listitem>
          <para>
            Enables the multiplication of the Fourier coefficients by a
            function proportional to
            <xi:include href="eqi-1-over-1-plus-K2T2-to-3t4.xml"/>, where
            <xi:include href="eqi-T.xml"/> is the autocorrelation length.
            So, the factor itself is not actually Lorentzian but it
            corresponds to Lorentzian one-dimensional power spectrum density
            which in turn corresponds to exponential autocorrelation function
            (see section
            <link linkend='autocorrelation-1d'>Statistical Analysis</link> for
            the discussion of autocorrelation functions).  This factor
            decreases relatively slowly so the finite resolution plays
            usually a larger role than in the case of Gaussian.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Autocorrelation length</guilabel>
        </term>
        <listitem>
          <para>
            The autocorrelation length of the Gaussian or Lorentzian factors
            (see section
            <link linkend='autocorrelation-1d'>Statistical Analysis</link> for
            the discussion of autocorrelation functions).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Enable power multiplier</guilabel>
        </term>
        <listitem>
          <para>
            Enables multiplication of Fourier coefficients by factor
            proportional to
            <xi:include href="eqi-1-over-k-to-p.xml"/>, where
            <xi:include href="eqi-k.xml"/>
            is the spatial frequency and <xi:include href="eqi-p.xml"/> is the
            power.  This permits to generate various fractal surfaces.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Power</guilabel>
        </term>
        <listitem>
          <para>
            The power <xi:include href="eqi-p.xml"/>.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id='fig-synthetic-spectral'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-spectral.png' format='PNG'/>
        </imageobject>
        <caption>
          Artificial surfaces generated by spectral synthesis: a narrow range
          of spatial frequencies (left), Gaussian random surface (centre) and a
          fractal surface generated with power multiplier and
          <xi:include href="eqi-p.xml"/> equal to 1.5 (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='object-synthesis'>
    <title>Objects</title>
    <para>
      The object placement method permits to create random surfaces composed
      of features of a specific shape.  The algorithm is simple: the given
      number of objects is placed on random positions at the surface.  For each
      object placed, the new heights are changed to
      <xi:include href="eqi-max-z-z_0-plus-h.xml"/>, where
      <xi:include href="eqi-z.xml"/> is the current height at a specific
      pixel, <xi:include href="eqi-h.xml"/> is the height of the object at this
      pixel (assuming a zero basis) and <xi:include href="eqi-z_0.xml"/>
      is the current minimum height over the basis of the object being placed.
      The algorithm considers the horizontal plane to be filled with identical
      copies of the surface, hence, the generated surfaces are also periodic
      (i.e. perfectly tilable).
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Shape</guilabel>
        </term>
        <listitem>
          <para>
            The shape (type) of placed objects.  At present the possibilities
            include half-spheres, boxes, pyramids, tetrahedrons and some more
            weird shapes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Coverage</guilabel>
        </term>
        <listitem>
          <para>
            The average number of times an object covers a pixel on the image.
            Coverage value of 1 means the surface would be exactly once covered
            by the objects assuming that they covered it uniformly.  Larger
            values mean more layers of objects – and slower image generation.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Size</guilabel>
        </term>
        <listitem>
          <para>
            The lateral object size, usually the side of a containing square.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Aspect Ratio</guilabel>
        </term>
        <listitem>
          <para>
            The ratio between the <xi:include href="eqi-x.xml"/> and
            <xi:include href="eqi-y.xml"/> dimensions of an object – with
            respect to some default proportions.
          </para>
          <para>
            Changing the aspect ratio does not always imply mere geometrical
            scaling, e.g. objects called nuggets change between half-spheres
            and rods when the ratio is changed.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Height</guilabel>
        </term>
        <listitem>
          <para>
            A quantity proportional to the height of the object, normally
            the height of the highest point.
          </para>
          <para>
            Checking <guilabel>Scales with size</guilabel> makes unperturbed
            heights to scale proportionally with object size.  Otherwise the
            height is independent on size.
          </para>
          <para>
            Button <guilabel>Like Current Channel</guilabel> sets the height
            value to a value based on the RMS of the current channel.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Orientation</guilabel>
        </term>
        <listitem>
          <para>
            The rotation of objects with respect to some base orientation,
            measured counterclockwise.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Truncate</guilabel>
        </term>
        <listitem>
          <para>
            The shapes can be truncated at a certain height, enabling creation
            of truncated cones, pyramids, etc.  The truncation height is given
            as a proportion to the total object height.  Unity means the shape is
            not truncated, zero would mean complete removal of the object.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      Each parameter can be randomized for individual objects, this is
      controlled by <guilabel>Variance</guilabel>.  For multiplicative
      quantities (all except orientation and truncation), the distribution is log-normal
      with the RMS value of the logarithmed quantity given by
      <guilabel>Variance</guilabel>.
    </para>
    <informalfigure id='fig-synthetic-objects'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-objects.png' format='PNG'/>
        </imageobject>
        <caption>
          Artificial surfaces generated by object placement: spheres of varied
          size (left), narrow thatches of varied direction (centre), nuggets
          of varied aspect ratio (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='noise-synthesis'>
    <title>Noise</title>
    <para>
      Random uncorrelated point noise is generated independently in each pixel.
      Several distributions are available.
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Distribution</guilabel>
        </term>
        <listitem>
          <para>
            The distribution of the noise value.  The possibilities include
            Gaussian, exponential, uniform and triangular distributions.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Direction</guilabel>
        </term>
        <listitem>
          <para>
            The noise can be generated as symmetrical or one-sided.  The
            mean value of the distribution of a symmetrical noise is zero,
            i.e. the mean value of data does not change when a symmetrical
            noise is added.  One-sided noise only increases (if positive)
            or decreases (if negative) the data values.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>RMS</guilabel>
        </term>
        <listitem>
          <para>
            Root mean square value of the noise distribution.  More precisely,
            it is the RMS of the corresponding symmetrical distribution in the
            case the distribution is one-sided.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
  <sect2 id='line-noise-synthesis'>
    <title>Line Noise</title>
    <para>
      Line noise represents noise with non-negligible duration that leads to typical
      steps or scars (also called strokes) in the direction of the fast
      scanning axis.  Parameters <guilabel>Distribution</guilabel>,
      <guilabel>Direction</guilabel> and <guilabel>RMS</guilabel> have the same
      meaning as in <link linkend='noise-synthesis'>Point noise</link>.  Other
      parameters control the lateral characteristics of the noise.
    </para>
    <para>
      Two basic line defect types are available: steps and scars.  Steps represent abrupt
      changes in the value that continue to the end of the scan (or until another step
      occurs).  Scars are changes of the value with a finite duration, i.e. the
      values return to the original level after some time.
    </para>
    <para>
      Steps have the following parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Density</guilabel>
        </term>
        <listitem>
          <para>
            Average number of defects per scan line, including any dead time
            (as determined by parameter <guilabel>Within line</guilabel>).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Within line</guilabel>
        </term>
        <listitem>
          <para>
            Fraction of the time to scan one line that corresponds to actual data
            acquisition.  The rest of time is a dead time.  Value 1 means there is no dead
            time, i.e. all steps occur within the image.  Value 0 means the data acquisition
            time is negligible to the total line scan time, consequently, steps only occur
            between lines.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Cumulative</guilabel>
        </term>
        <listitem>
          <para>
            For cumulative steps the random step value is always added to the
            current value offset; for non-cumulative steps the new value offset is directly
            equal to the random step value.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      Scars have the following parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Coverage</guilabel>
        </term>
        <listitem>
          <para>
            The fraction of the the image covered by defect if they did not
            overlap.  Since the defect may overlap coverage value of 1.0 does
            not mean the image is covered completely.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Length</guilabel>
        </term>
        <listitem>
          <para>
            Scar length in pixels.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Variance</guilabel>
        </term>
        <listitem>
          <para>
            Variance of the scar length, see <link linkend='object-synthesis'>Objects</link>
            for description of variances.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id='fig-synthetic-line-noise'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-line-noise.png' format='PNG'/>
        </imageobject>
        <caption>
          Different types of line noise added to an artificial pyramidal surface: unmodified
          surface (left); with relatively unfrequent non-cumulative steps (centre); with
          scars of mean length of 16 px and high coverage (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='pattern-synthesis'>
    <title>Pattern</title>
    <para>
      Regular geometrical patterns represent surfaces often encountered in
      microscopy as standards or testing samples such as ridges, steps or holes.
      Each type of pattern has its own set of geometrical parameters
      determining the shape and dimensions of various part of the pattern.  Each
      parameter has a variance control, similar to
      <link linkend='object-synthesis'>Object synthesis</link>, that permits to
      make the pattern irregular in some aspects.
    </para>
    <para>
      The placement of the pattern in the horizontal plane is controlled by
      parameters in tab <guilabel>Placement</guilabel>, common to all pattern
      types:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Orientation</guilabel>
        </term>
        <listitem>
          <para>
            The rotation of the pattern with respect to some base orientation,
            measured counterclockwise.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      This tab also contains the deformation parameters.  While enabling the
      variation of geometrical parameters makes the generated surface somewhat
      irregular the shape of its features is maintained.
      <guilabel>Deformation</guilabel> is a complementary method to introduce irregularity,
      specifically by distorting the pattern in the <xi:include href="eqi-xy.xml"/> plane.
      It has two parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Amplitude</guilabel>
        </term>
        <listitem>
          <para>
            The magnitude of the lateral deformation.  It is a relative
            numerical quantity essentially determining how far the deformation
            can reach.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Lateral scale</guilabel>
        </term>
        <listitem>
          <para>
            The characteristic size of the deformations.  It describes not
            how far the features are moved but how sharply or slowly the
            deformation itself changes within the horizontal plane.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id='fig-synthetic-pattern'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-pattern.png' format='PNG'/>
        </imageobject>
        <caption>
          Artificial pattern surfaces: sharp steps oriented at 30 deg, deformed
          with a deformation with a large autocorrelation length (left);
          non-uniformly spaced ridges with moderate slopes between the top and
          bottom planes, deformed with a deformation with a small
          autocorrelation length (centre); unperturbed pattern of rounded holes
          with a large variation in size and depth (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='columnar-synthesis'>
    <title>Columnar films</title>
    <para>
      The columnar film growth simulation utilises a simple Monte Carlo
      deposition algorithm in which small particles are incident on the
      surface from directions generated according to given paramerters,
      and they stick to the surface around the point where they hit it,
      increasing the height there locally.  The shadowing effect then causes
      more particles to stick to higher parts of the surface and less
      particles to the lower parts.  This positive local height feedback
      leads to the formation of columns.
      The algorithm considers the horizontal plane to be filled with identical
      copies of the surface, hence, the generated surfaces are also periodic
      (i.e. perfectly tilable).  The surface generator has the following
      parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Coverage</guilabel>
        </term>
        <listitem>
          <para>
            The average number of times a particle is generated above each
            surface pixel.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Height</guilabel>
        </term>
        <listitem>
          <para>
            Local height increase occurring when the particle sticks to
            a pixel.  Since the horizontal size of the particle is always one
            pixel the height is measured in pixels.  A height of one pixel
            essentially means cubical particles, as far as growth is
            concerned.  From the point of view of collision detection the
            particles are considered infinitely small.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Inclination</guilabel>
        </term>
        <listitem>
          <para>
            Central inclination angle with which the particles are generated
            (angle of incidence).  The value of zero means very small angles
            of incidence have the highest probability.  Large values mean
            that the particles are more likely to impinge at large angles
            than at small angles.  But for large direction variance, the
            distribution is still isotropic in the horizontal plane.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Direction</guilabel>
        </term>
        <listitem>
          <para>
            Central direction in the horizontal plane with which the
            particles are generated.  Large variance means the distribution
            is isotropic in the horizontal plane; for small variances the
            growth is anisotopic.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Relaxation</guilabel>
        </term>
        <listitem>
          <para>
            Method for determination of the pixel the particle will finally
            stick to.  Two options exist at this moment.  Weak relaxation, in
            which only the two pixels just immediately before collision and
            after collision are considered and the particle sticks to the
            lower of them.  In the case of strong relaxation, a 3×3
            neighbourhood is considered in addition.  The particle can move
            to a lower neighbour pixel with a certain probability before
            sticking permanently.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id='fig-synthetic-columnar'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-columnar.png' format='PNG'/>
        </imageobject>
        <caption>
          Artificial columnar surfaces: loosely packed columns (left);
          tightly packed columns (centre); directional growth with strong
          relaxation (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='wave-synthesis'>
    <title>Waves</title>
    <para>
      The wave synthesis method composes the image using interference of waves
      from a number of point sources.  Beside the normal cosine wave, a few
      other wave types are available, each having a cosine and sine form that
      differ by phase shift <xi:include href="eqi-pi-over-2"/> in all frequency
      components.  When the wave is treated as complex, the cosine form is its
      real part and its sine form is its imaginary part.
    </para>
    <informalfigure id='fig-synthetic-wave-waveform'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='waveform.pdf' format='PDF'/>
        </imageobject>
        <imageobject>
          <imagedata fileref='waveform.png' format='PNG'/>
        </imageobject>
        <caption>
          Sine and cosine wave forms for the available wave types.  Only the
          cosine form is used for displacement images; the entire complex wave
          is used for intensity and phase images.
        </caption>
      </mediaobject>
    </informalfigure>
    <para>
      The generator has the following options:
    </para>
    <variablelist>
      <varlistentry>
        <term>
          <guilabel>Quantity</guilabel>
        </term>
        <listitem>
          <para>
            Quantity to display in the image.  Displacement is the sum of the
            real parts.  Amplitude is the absolute value of the complex wave.
            Phase is the phase angle of the complex wave.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Number of waves</guilabel>
        </term>
        <listitem>
          <para>
            The number of point sources the waves propagate from.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Wave form</guilabel>
        </term>
        <listitem>
          <para>
            One of the wave forms described above.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Amplitude</guilabel>
        </term>
        <listitem>
          <para>
            Approximate amplitude (rms) of heights in the generated image.
            Note it differs from the amplitude of individual waves: the
            amplitude of heights in the generated image would grow with the
            square root of the number of waves in such case, whereas it in
            fact stays approxiately constant unless the amplitude changes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>Frequency</guilabel>
        </term>
        <listitem>
          <para>
            Spatial frequency of the waves.  It is relative to the image size,
            i.e. the value of 1.0 means wavelength equal to the lenght of the
            image side.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <guilabel>X center</guilabel>,
          <guilabel>Y center</guilabel>
        </term>
        <listitem>
          <para>
            Locations of the point sources.  Zero corresponds to the image
            centre. The positions are also measured in image sizes.
            Generally, at least one of the corresponding variances should be
            non-zero; otherwise all the point sources coincide (some
            interesting patterns can be still generated with varying frequency
            though).
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id='fig-synthetic-waves'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='synthetic-waves.png' format='PNG'/>
        </imageobject>
        <caption>
          Artificial wave surfaces: displacement image generated with fairly
          large frequency variation (left); amplitude image for inverse cosh
          wave form (centre); phase image for a small cluster of far-away
          sources (right).
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
