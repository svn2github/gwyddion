<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id: opengl-3d-view.xml 10418 2009-11-13 14:53:56Z yeti-dn $ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 xmlns:xi="http://www.w3.org/2001/XInclude" id="opengl-3d-view">
  <title>Окно трёхмерного отображения данных OpenGL</title>
  <indexterm>
    <primary>трёхмерное</primary>
    <secondary>отображение данных</secondary>
  </indexterm>
  <para>Трёхмерное отображение OpenGL текущего окна данных может быть вызвано кнопкой с изображением куба в ряду кнопок <guilabel>Вид</guilabel> главного окна.</para>
  <para>Эта возможность является опциональной, т.е. она может быть отключена во время сборки. Также возможен вариант, когда Gwyddion может отображать трёхмерные данные, а ваша система это не поддерживает. В обоих случаях попытка вызвать трёхмерный вид приводит к появлению сообщения об ошибке, объясняющему, какой из двух вариантов произошел. В первом случае вам нужно попросить сборщиков исполняемых файлов Gwyddion  собрать его с поддержкой трёхмерного отображения или собрать его самому из исходного кода. Во втором случае, обратитесь к руководству по вашей операционной системе и посмотрите там как включить поддержку трехмерных функций OpenGL.</para>
  <para>Окно трёхмерного вида может существовать в двух вариантах: с основными и с расширенными элементами управления. Оно запускается только с основными элементами управления, этот вариант показан на <link linkend="fig-opengl-3d-view-screenshot">следующем рисунке</link>. Оно может быть переключено к расширенному виду (и обратно) с помощью кнопки расширения в верхнем правом углу. Нажатие на вид с помощью правой кнопки мыши вызывает окно быстрого выбора градиента псевдоцвета/материала OpenGL.</para>
  <informalfigure id="fig-opengl-3d-view-screenshot" float="0">
    <mediaobject>
      <imageobject>
        <imagedata fileref="opengl-3d-view.png" format="PNG"/>
      </imageobject>
      <caption>Окно трёхмерного просмотра данных OpenGL с основными элементами управления.</caption>
    </mediaobject>
  </informalfigure>
  <sect2 id="opengl-3d-view-basic-controls">
    <title>Основные элементы управления</title>
    <para>Основное окно трёхмерного просмотра содержит элементы управления режимом взаимодействия справа. По умолчанию, перетаскивание вида мышью вращает его горизонтально и вертикально. Все возможные режимы перечислены ниже: <itemizedlist><listitem> Вращение – режим по умолчанию. Перетаскивание вида горизонтально вращает его вокруг оси <phrase role="mathvar">z</phrase>, вертикальное перетаскивание вращает его вокруг горизонтальной оси, параллельной плоскости вида. </listitem><listitem> Масштаб – перетаскивание вида вправо и вниз увеличивает его, перетаскивание в обратном направлении уменьшает. </listitem><listitem> масштаб Z – перетаскивание вида вверх (вниз) увеличивает (уменьшает) масштаб <phrase role="mathvar">z</phrase>, делая возвышенности и впадины более или менее явными. </listitem><listitem> Вращение света – эта возможность доступна только в режиме визуализации с освещением. Перетаскивание вида меняет положение источника света подобно вращению данных в нормальном режиме вращения. </listitem></itemizedlist> основные элементы управления также содержат кнопку экспорта изображения.</para>
    <para>Когда показаны основные элементы управления можно переключаться между режимами с помощью клавиш <keycap>R</keycap> (вращение, rotation), <keycap>S</keycap> (масштаб, scale), <keycap>V</keycap> (масштаб значений, value scale) и <keycap>L</keycap> (вращение света, light rotation).</para>
  </sect2>
  <sect2 id="opengl-3d-view-full-controls">
    <title>Полный набор элементов управления</title>
    <para>В режиме расширенных элементов управления кнопки расположены в верхнем ряду, однако их функции не меняются. В дополнение появляются несколько вкладок с настройками под ними: <itemizedlist><listitem><guilabel>Основные</guilabel> – элементы управления для задания вращения и масштаба численно и для включения/выключения отображения осей, подписей к осям и перспективной проекции.</listitem><listitem><guilabel>Свет и материал</guilabel> – настройки отображения. Трёхмерный просмотр в Gwyddion имеет два основных режима отображения: градиент, в котором данные раскрашиваются в соответствии со шкалой псевдоцвета точно так же, как и в нормальном двумерном режиме отображения; и материал, в котором данные представлены как материал OpenGL отрисованный в соответствии с положением источника света. Эта вкладка также содержит элементы управления для численного задания положения источника света. </listitem><listitem><guilabel>Метки</guilabel> – точная настройка размеров, положения и других свойств подписей к осям. </listitem></itemizedlist></para>
  </sect2>
  <sect2 id="opengl-3d-view-saving-images">
    <title>Сохранение изображений</title>
    <para>Трёхмерный вид может быть сохранён в растровое изображение с помощью кнопки <guibutton>Сохранить</guibutton>. Результат на настоящий момент всегда будет изображением PNG (Portable Network Graphics) с точно таким же размером и содержимым, как показано на экране. Попытка ввести другое расширение файла вместо <filename>.png</filename> всё равно создаёт файл в формате PNG, но с вводящим в заблуждение расширением.</para>
    <para>Следует отметить, что из-за особенностей некоторых операционных систем, графических драйверов и оконных сред, на экспортированном изображении иногда могут появляться артефакты в тех областях окна трёхмерного просмотра, которые были скрыты. если вы столкнулись с подобными проблемами, убедитесь, что окно трёхмерного просмотра не скрыто под другими окнами во время экспорта изображения.</para>
  </sect2>
  <sect2 id="opengl-material-editor">
    <title>Редактор материалов OpenGL</title>
    <indexterm>
      <primary>трёхмерное</primary>
      <secondary>редактирование материала</secondary>
    </indexterm>
    <indexterm>
      <primary>трёхмерное</primary>
      <secondary>выбор материала по умолчанию</secondary>
    </indexterm>
    <para>Редактор материалов OpenGL можно вызвать из меню  <menuchoice><guimenu>Правка</guimenu><guimenuitem>Материалы OpenGL</guimenuitem></menuchoice>. Элементы управления в списке материалов те же самые, что и в списке <link linkend="color-gradient-editor">редактора градиентов псевдоцвета</link>, управление материалами также работает подобным образом. Реальный редактор, естественно, отличается. Он позволяет редактировать четыре величины, задающие материал: <itemizedlist><listitem> цвет окружающего <xi:include href="eqi-k_a-alpha.xml"/> (где <xi:include href="eqi-alpha-is-red-green-blue.xml"/>), управляющий отражением окружающего освещения, которое считается приходящим равномерно со всех возможных направлений, </listitem><listitem> цвет рассеянного <xi:include href="eqi-k_d-alpha.xml"/>, описывающий отражение рассеянного света, которое не зависит от направления падающего света и чья кажущаяся яркость не зависит от угла наблюдения, </listitem><listitem> отраженный цвет <xi:include href="eqi-k_s-alpha.xml"/>, управляющий зеркальным отражением, где интенсивность отраженного света зависит от угла между направлением на наблюдателя и направлением луча света, который бы отразился идеальным зеркалом с той же нормалью, и </listitem><listitem> блеск <xi:include href="eqi-s.xml"/>, числовая экспонента, определяющая насколько зеркальное отражение похоже на идеальное зеркало, меньшие значения соответствуют более шероховатым поверхностям, большие - более гладким. </listitem></itemizedlist></para>
    <para>Если мы обозначим <xi:include href="eqi-vec-L.xml"/> обычный вектор, указывающий из точки плоскости наблюдения на источник света, <xi:include href="eqi-vec-V.xml"/> вектор к наблюдателю, <xi:include href="eqi-vec-N.xml"/> вектор нормали к поверхности и <xi:include href="eqi-vec-R.xml"/> вектор в направлении отражения идеальным зеркалом, наблюдаемая интенсивность света в модели освещения OpenGL может быть выражена как <xi:include href="eq-opengl-light-model.xml"/> где <xi:include href="eqi-I_a-alpha.xml"/>, <xi:include href="eqi-I_d-alpha.xml"/> и <xi:include href="eqi-I_s-alpha.xml"/> - интенсивности окружающего, рассеянного и зеркального источников света, соответственно. </para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
