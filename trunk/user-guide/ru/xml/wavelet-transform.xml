<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id: wavelet-transform.xml 10418 2009-11-13 14:53:56Z yeti-dn $ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 xmlns:xi="http://www.w3.org/2001/XInclude" id="wavelet-transform">
  <title>Вейвлет-преобразование</title>
  <indexterm><primary>вейвлет-преобразование</primary></indexterm>
  <para>Вейвлет-преобразование - преобразование, похожее на преобразование Фурье (или гораздо больше на оконное преобразование Фурье) с совершенно иной оценочной функцией. Основное различие лежит в следующем: преобразование Фурье раскладывает сигнал на составляющие в виде синусов и косинусов, т.е. функций, локализованных в Фурье-пространстве; напротив, вейвлет-преобразование использует функции, локализованные как в реальном, так и в в Фурье-пространстве. В общем, вейвлет-преобразование может быть выражено следующим уравнением: <xi:include href="eq-wavelet-transform-continuous.xml"/> где * - символ комплексной сопряженности и функция <xi:include href="eqi-psi.xml"/> - некоторая функция. Функция может быть выбрана произвольно, но она должна удовлетворять определённым правилам.</para>
  <para>Как видно, вейвлет-преобразование на самом деле является бесконечным множеством различных преобразований в зависимости от оценочной функции, использованной для его расчёта. Это является основной причиной, почему термин <quote>вейвлет-преобразование</quote> используется в весьма различных ситуациях и применениях. Также существует множество типов классификации вариантов вейвлет-преобразования. Здесь мы покажем только деление. основанное на ортогональности вейвлетов. Можно использовать <emphasis>ортогональные вейвлеты</emphasis> для разработки дискретного вейвлет-преобразования и <emphasis>неортогональные вейвлеты</emphasis> для непрерывного. Эти два вида преобразования обладают следующими свойствами:</para>
  <orderedlist>
    <listitem>Дискретное вейвлет-преобразование возвращает вектор данных той же длины, что и входной. Обычно, даже в этом векторе многие данные почти равны нулю. Это соответствует факту, что он раскладывается на набор вейвлетов (функций), которые ортогональны к их параллельному переносу и масштабированию. Следовательно, мы раскладываем подобный сигнал на то же самое или меньшее число коэффициентов вейвлет-спектра, что и количество точек данных сигнала. Подобный вейвлет-спектр весьма хорош для обработки и сжатия сигналов, например, поскольку мы не получаем здесь избыточной информации.</listitem>
    <listitem>Непрерывное вейвлет-преобразование, напротив, возвращает массив на одно измерение больше входных данных. Для одномерных данных мы получаем изображение плоскости время-частота. Можно легко проследить изменение частот сигнала в течение длительности сигнала и сравнивать этот спектр со спектрами других сигналов. Поскольку здесь используется неортогональный набор вейвлетов, данные высоко коррелированы и обладают большой избыточностью. Это помогает видеть результат в более близком человеческому восприятию виде.</listitem>
  </orderedlist>
  <para>Дополнительные подробности о вейвлет-преобразовании доступны на тысячах интернет-ресурсов о вейвлетах в сети, или, например, здесь [<link linkend="wavelet-transform-ref-1">1</link>].</para>
  <para>В библиотеке обработки данных Gwyddion реализованы оба этих преобразования и использующие вейвлет-преобразование модули доступны в меню <menuchoice><guimenu>Обработка данных</guimenu><guisubmenu>Интегральные преобразования</guisubmenu></menuchoice>.</para>
  <sect2 id="dwt">
    <title>Дискретное вейвлет-преобразование</title>
    <indexterm>
      <primary>вейвлет-преобразование</primary>
      <secondary>дискретное</secondary>
    </indexterm>
    <para>Дискретное вейвлет-преобразование (DWT) - реализация вейвлет-преобразования с использованием дискретного набора масштабов и переносов вейвлета, подчиняющихся некоторым определённым правилам. Другими словами, это преобразование раскладывает сигнал на взаимно ортогональный набор вейвлетов, что является основным отличием от непрерывного вейвлет-преобразования (CWT), или его реализации для дискретных временных рядов, иногда называемой непрерывным вейвлет-преобразованием дискретного времени (DT-CWT).</para>
    <para>Вейвлет может быть сконструирован из функции масштаба, которая описывает свойства его масштабируемости. Ограничение, что функция масштаба должна быть ортогональна к своим дискретным преобразованиям, подразумевает некоторые математические ограничения на них, которые везде упоминаются, т.е. уравнение гомотетии <xi:include href="eq-wavelet-dilation-equation.xml"/> где <xi:include href="eqi-S.xml"/> - фактор масштаба (обычно выбирается как 2). Более того, площадь под функцией должна быть нормализована и функция масштабирования должна быть ортогональна к своим  численным переносам, т.е. <xi:include href="eq-wavelet-orthogonality.xml"/></para>
    <para>После введения некоторых дополнительных условий (поскольку вышеупомянутые ограничения не приводят к единственному решению) мы можем получить результат всех этих уравнений, т.е. конечный набор коэффициентов <xi:include href="eqi-a_k.xml"/> которые определяют функцию масштабирования, а также вейвлет. Вейвлет получается из масштабирующей функции как <xi:include href="eq-wavelet-scaling-function.xml"/> где <xi:include href="eqi-N.xml"/> - чётное целое. набор вейвлетов затем формирует ортонормированный базис, который мы используем для разложения сигнала. Следует отметить, что обычно только несколько коэффициентов <xi:include href="eqi-a_k.xml"/> будут ненулевыми, что упрощает расчёты. </para>
    <para>На следующем рисунке показаны некоторые масштабирующие функции и вейвлеты. Наиболее известным семейством ортонормированных вейвлетов явлется семейство Добеши. Её вейвлеты обычно обозначаются числом ненулевых коэффициентов <xi:include href="eqi-a_k.xml"/>, таким образом, мы обычно говорим о вейвлетах Добеши 4, Добеши 6, и т.п. Грубо говоря, с увеличением числа коэффициентов вейвлета функции становятся более гладкими. См. сравнение вейвлетов Добеши 4 и 20 ниже. Другой из упомянутых вейвлетов - простейший вейвлет Хаара, который использует прямоугольный импульс как масштабирующую функцию.</para>
    <informalfigure id="fig-wavelet-haar">
      <mediaobject>
        <imageobject>
          <imagedata fileref="wavelet-haar.pdf" format="PDF"/>
        </imageobject>
        <imageobject>
          <imagedata fileref="wavelet-haar.png" format="PNG"/>
        </imageobject>
        <caption>Функция масштабирования Хаара и вейвлет (слева) и их частотные составляющие (справа).</caption>
      </mediaobject>
    </informalfigure>
    <informalfigure id="fig-wavelet-daubechies4">
      <mediaobject>
        <imageobject>
          <imagedata fileref="wavelet-daubechies4.pdf" format="PDF"/>
        </imageobject>
        <imageobject>
          <imagedata fileref="wavelet-daubechies4.png" format="PNG"/>
        </imageobject>
        <caption>Функция масштабирования Добеши 4 и вейвлет (слева) и их частотные составляющие (справа).</caption>
      </mediaobject>
    </informalfigure>
    <informalfigure id="fig-wavelet-daubechies20">
      <mediaobject>
        <imageobject>
          <imagedata fileref="wavelet-daubechies20.pdf" format="PDF"/>
        </imageobject>
        <imageobject>
          <imagedata fileref="wavelet-daubechies20.png" format="PNG"/>
        </imageobject>
        <caption>Функция масштабирования Добеши 20 и вейвлет (слева) и их частотные составляющие (справа).</caption>
      </mediaobject>
    </informalfigure>
    <para>Существует несколько видов реализации алгоритма дискретного вейвлет-преобразования. Самый старый и наиболее известный – алгоритм Малла (пирамидальный). В этом алгоритме два фильтра – сглаживающий и несглаживающий составляются из коэффициентов вейвлета и эти фильтры рекуррентно применяются для получения данных для всех доступных масштабов. Если используется полный набор данных <xi:include href="eqi-D-is-2-to-N.xml"/> и длина сигнала равна <xi:include href="eqi-L.xml"/>, сначала рассчитываются данные <xi:include href="eqi-D-over-2.xml"/> для масштаба <xi:include href="eqi-L-over-2-to-N-minus-1.xml"/>, затем данные <xi:include href="eqi-D-over-2-over-2.xml"/> для масштаба <xi:include href="eqi-L-over-2-to-N-minus-2.xml"/>, … пока в конце не получится 2 элемента данных для масштаба <xi:include href="eqi-L-over-2.xml"/>. результатом работы этого алгоритма будет массив той же длины, что и входной, где данные обычно сортируются от наиболее крупных масштабов к наиболее мелким.</para>
    <para>В Gwyddion для расчёта дискретного вейвлет-преобразования используется пирамидальный алгоритм. Дискретное вейвлет-преобразование в двумерном пространстве доступно в модуле DWT.</para>
    <para id="dwt-denoise">Дискретное вейвлет-преобразование может использоваться для простого и быстрого удаления шума с зашумлённого сигнала. Если мы возьмём только ограниченное число наиболее высоких коэффициентов спектра дискретного вейвлет-преобразования, и проведём обратное вейвлет-преобразование (с тем же базисом) мы можем получить сигнал более или менее очищенный от шума. Есть несколько способов как выбрать коэффициенты, которые нужно сохранить. В Gwyddion реализованы универсальный порог, адаптивный по масштабу порог [<link linkend="wavelet-transform-ref-2">2</link>] и адаптивный по масштабу и пространству порог [<link linkend="wavelet-transform-ref-3">3</link>]. Для определения порога в этих методах мы сперва определяем оценку дисперсии шума, заданную <xi:include href="eq-wavelet-variance-guess.xml"/> где <xi:include href="eqi-Y_ij.xml"/> соответствует всем коэффициентам наиболее высокого поддиапазона масштаба разложения (где, как предполагается, должна присутствовать большая часть шума). Или же дисперсия шума может быть получена независимым путём, например, как дисперсия сигнала АСМ когда сканирование не идёт. Для наиболее высокого поддиапазона частот (универсальный порог) или для каждого поддиапазона (для адаптивного по масштабу порога) или для окружения каждого  пикселя в поддиапазоне (для адаптивного по масштабу и пространству порога) дисперсия рассчитывается как <xi:include href="eq-wavelet-variance-sum.xml"/></para>
    <para>Значение порога считается в конечном виде как <xi:include href="eq-wavelet-threshold-value.xml"/> где <xi:include href="eq-wavelet-sigma-X.xml"/> Когда порог для заданного масштаба известен, мы можем удалить все коэффициенты меньше значения порога (жесткий порог) или мы можем уменьшит абсолютное значение этих коэффициентов на значение порога (мягкий порог).</para>
    <para>Удаление шума DWT доступно в меню <menuchoice><guimenu>Обработка данных</guimenu><guisubmenu>Интегральные преобразования</guisubmenu><guimenuitem>Удаление шума DWT </guimenuitem></menuchoice>.</para>
  </sect2>
  <sect2 id="cwt">
    <title>Непрерывное вейвлет-преобразование</title>
    <indexterm>
      <primary>вейвлет-преобразование</primary>
      <secondary>непрерывное</secondary>
    </indexterm>
    <para>Непрерывное вейвлет-преобразование (CWT) - реализация вейвлет-преобразования с использованием произвольных масштабов и практически произвольных вейвлетов. Используемые вейвлеты не ортогональны и данные, полученные в ходе этого преобразования высоко коррелированы. Для дискретных временных последовательностей также можно использовать это преобразование, с ограничением что наименьшие переносы вейвлета должны быть равны дискретизации данных. Это иногда называется непрерывным вейвлет-преобразованием дискретного времени (DT-CWT) и это наиболее часто используемый метод расчёта CWT в реальных применениях.</para>
    <para>В принципе непрерывное вейвлет-преобразование работает используя напрямую определение вейвлет-преобразования, т.е. мы рассчитываем свёртку сигнала с масштабированным вейвлетом. Для каждого масштаба мы получаем этим способом набор той же длины <xi:include href="eqi-N.xml"/>, что и входной сигнал. Используя <xi:include href="eqi-M.xml"/> произвольно выбранных масштабов мы получаем поле <xi:include href="eqi-NxM.xml"/>, которое напрямую представляет плоскость время-частота. Алгоритм, используемый для этого расчёта может быть основан на прямой свёртке или на свёртке посредством умножения в Фурье-пространстве (это иногда называется быстрым вейвлет-преобразованием).</para>
    <para>Выбор вейвлета для использования в разложении на время-частоту является наиболее важной вещью. Этим выбором мы можем влиять на разрешение результата по времени и по частоте. Мы не можем изменить этим путём основные характеристики вейвлет-преобразования (низкие частоты имеют хорошее разрешение по частотам и плохое по времени; высокие имеют плохое разрешение по частотам и хорошее по времени), но мы можем несколько увеличить общее разрешение по частотам или по времени. Это напрямую пропорционально ширине используемого вейвлета в реальном и Фурье-пространстве. если мы используем вейвлет Морле, например (реальная часть – затухающая функция косинуса), мы можем ожидать высокого разрешения по частотам, поскольку такой вейвлет очень хорошо локализован по частоте. наоборот, используя dtqdktn производная гауссиана (DOG) мы получим хорошую локализацию времени, но плохую частот.</para>
    <para>Непрерывное вейвлет-преобразование реализовано в модуле CWT, который доступен в меню <menuchoice><guimenu>Обработка данных</guimenu><guisubmenu>Интегральные преобразования</guisubmenu><guimenuitem>CWT</guimenuitem></menuchoice>.</para>
  </sect2>
  <sect2 id="wavelet-transform-ref">
    <title>Источники</title>
    <para id="wavelet-transform-ref-1">[1] A. Bultheel: Bull. Belg. Math. Soc.: (1995) 2</para>
    <para id="wavelet-transform-ref-2">[2] S. G. Chang, B. Yu, M. Vetterli: IEEE Trans. Image Processing, (2000) 9 p. 1532</para>
    <para id="wavelet-transform-ref-3">[3] S. G. Chang, B. Yu, M. Vetterli: IEEE Trans. Image Processing, (2000) 9 p. 1522</para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
