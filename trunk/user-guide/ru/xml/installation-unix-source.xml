<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="installation-unix-source">
  <title>Компиляция на Linux/Unix</title>
  <para>Система сборки <application>Gwyddion</application> на Unix основана на GNU autotools (<ulink url="http://www.gnu.org/software/autoconf/">autoconf</ulink>, <ulink url="http://www.gnu.org/software/automake/">automake</ulink>, <ulink url="http://www.gnu.org/software/libtool/">libtool</ulink>), так же, как и большинство современного свободного программного обеспечения и программ с открытым исходным кодом под Unix. Если вы когда-либо собирали программы из исходников, вы, вероятно, уже встречались с autotools и знаете, что делать дальше. Этот раздел, тем не менее, будет описывать процесс сборки достаточно детально, чтобы быть понятным и тем, кто ещё этого не делал. Файл <ulink url="http://gwyddion.svn.sourceforge.net/viewvc/gwyddion/trunk/gwyddion/INSTALL"><filename>INSTALL</filename></ulink> в каталоге верхнего уровня архива с исходным кодом содержит общие инструкции по установке с помощью GNU autotools.</para>
  <sect2 id="installation-unix-source-quick">
    <title>Быстрые инструкции</title>
    <para>Если вам знакома нижеприведённая последовательность действий:</para>
    <informalexample>
      <literallayout><userinput>tar -Jxvf gwyddion-2.26.tar.xz
cd gwyddion-2.26
./configure
make install</userinput></literallayout>
    </informalexample>
  </sect2>
  <sect2 id="installation-unix-source-unpacking">
    <title>Распаковка исходного кода</title>
    <para>Распакуйте архив с исходным кодом командой <informalexample><literallayout><userinput>tar -Jxvf gwyddion-2.26.tar.xz</userinput></literallayout></informalexample>заменяя 2.26 реальным номером версии. При этом будет создан каталог  <filename>gwyddion-2.26</filename> (снова с текущим номером версии вместо 2.26), перейдите с помощью <command>cd</command> в этот каталог. Все остальные действия по сборке будут проходить там.</para>
    <para>Если в операционной системе отсутствует xz, можно загрузить <filename>gwyddion-2.26.tar.gz</filename> (сжатый с помощью gzip) вместо предыдущего архива и распаковать его с помощью <informalexample><literallayout><userinput>tar -zxvf gwyddion-2.26.tar.gz</userinput></literallayout></informalexample> Однако, современные Unix и подобные им системы поддерживают и gzip, и xz, и заметно меньший <filename>gwyddion-2.26.tar.xz</filename> обычно будет лучшим вариантом.</para>
  </sect2>
  <sect2 id="installation-unix-source-configuration">
    <title>Настройка</title>
    <para>Запустите <informalexample><literallayout><userinput>./configure</userinput></literallayout></informalexample> чтобы сконфигурировать сборку <application>Gwyddion</application>.</para>
    <para>Скрипт оболочки <command>configure</command> пытается угадать правильные значения для различных переменных, меняющихся от системы к системе и используемых в процессе компиляции. Он использует эти переменные чтобы создать <filename>Makefile</filename> в каждом каталоге пакета, набор заголовочных файлов с расширением <filename>.h</filename>, которые содержат зависящие от системы определения и некоторые другие  вспомогательные файлы. В конце своей работы он создаёт другой скрипт оболочки <command>config.status</command>, который можно затем использовать для повторения текущей конфигурации, и файл <filename>config.log</filename>, который содержит подробности процесса детектирования и который полезно включать в сообщения об ошибках компиляции. В конце команда <command>configure</command> также выводит суммарную сводку о включенных и выключенных дополнительных опциях, включая причины почему опция была выключена.</para>
    <para>Если <command>configure</command> пишет об отсутствии нужных пакетов, установите эти пакеты и перезапустите её. То же самое справедливо и для случая, если <command>configure</command> заканчивается успешно, но вы обнаружили, что забыли установить опциональный компонент, с которым хотели собрать <application>Gwyddion</application>. Возможно, что пакет не был найден или был неправильно определён даже если вы его установили, а именно если он был установлен в нестандартный каталог. В этом случае необходимо настроить определённые переменные окружения чтобы дать <command>configure</command> возможность найти эти пакеты: <variablelist>
        <varlistentry>
          <term><envar>PKG_CONFIG_PATH</envar></term>
          <listitem>
            <para>Большинство пакетов идут вместе с так называемыми файлами <ulink url="http://pkgconfig.freedesktop.org/wiki/">pkg-config</ulink> (<filename>.pc</filename>), которые описывают как программы должны собираться и линковаться с ними. <command>configure</command> использует информацию из этих файлов, следовательно, <envar>PKG_CONFIG_PATH</envar> должна быть установлена таким образом, чтобы там были перечислены все нестандартные какталоги с нужными файлами pkg-config. Чтобы добавить, например, установленную библиотеку GTK+ в <filename>/opt/gnome</filename> и установленную библиотеку FFTW3 в <filename>$HOME/opt/fftw3</filename>, нужно выполнить: <informalexample><literallayout><userinput>PKG_CONFIG_PATH=/opt/gnome/lib/pkgconfig:$HOME/opt/fftw3/lib/pkgconfig
export PKG_CONFIG_PATH</userinput></literallayout></informalexample></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><envar>PATH</envar>, <envar>LD_LIBRARY_PATH</envar></term>
          <listitem>
            <para>Может потребоваться настроить эти переменные чтобы включить нестандартные каталоги с исполняемыми файлами и библиотеками соответствующих пакетов.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><envar>CPPFLAGS</envar>, <envar>LDFLAGS</envar></term>
          <listitem>
            <para>Может потребоваться настроить эти переменные чтобы включить нестандартные каталоги с заголовочными файлами и библиотеками пакетов, с которыми не шло файлов pkg-config, например, для libTIFF в <filename>/usr/local</filename> можно установить: <informalexample><literallayout><userinput>CPPFLAGS=-I/usr/local/include
export CPPFLAGS
LDFLAGS=-L/usr/local/lib
export LDFLAGS</userinput></literallayout></informalexample></para>
          </listitem>
        </varlistentry>
      </variablelist></para>
    <para>Опция <option>--prefix</option> команды <command>configure</command> задаёт базовый каталог установки. Компоненты программы будут установлены в его подкаталоги <filename>bin</filename>, <filename>lib</filename>, <filename>share</filename>, и т.д. (которые будут созданы если они не существуют). Более детальное управление возможно с помощью опций, задающих отдельные подкаталоги, таких как <option>--bindir</option>, <option>--libdir</option>. Префикс по умолчанию – <filename>/usr/local/bin</filename>, чтобы установить <application>Gwyddion</application> в домашний каталог пользователя можно использовать, например команду <informalexample><literallayout><userinput>./configure --prefix=$HOME/opt/gwyddion</userinput></literallayout></informalexample> Если вы устанавливаете Gwyddion для личного использования это является рекомендованным вариантом, поскольку в этом случае не требуется выполнять действий с правами суперпользователя.</para>
  </sect2>
  <sect2 id="installation-unix-source-configuration2">
    <title>Настройки процесса конфигурирования</title>
    <para>Необязательные возможности можно включить/выключить с помощью опций вроде <option>--with-foo</option>/<option>--without-foo</option> или <option>--enable-foo</option>/<option>--disable-foo</option>. Например, компиляция с FFTW3 может быть отключена командой: <informalexample><literallayout><userinput>./configure --without-fftw3</userinput></literallayout></informalexample> По умолчанию все опциональные возможности включены, если найдены все требуемые библиотеки. Краткая сводка включенных и отключенных опциональных возможностей печатается рядом с концом вывода команды <command>configure</command>.</para>
    <para>Полный список опций и важных переменных <command>configure</command> можно получить с помощью команды: <informalexample><literallayout><userinput>./configure --help</userinput></literallayout></informalexample></para>
    <para>Большинство этих опций управляет включением/отключением дополнительных опциональных возможностей. Некоторые интересные общие настройки описаны ниже.</para>
    <sect3 id="installation-unix-source-configuration-user">
      <title>Настройки пользователей</title>
      <para>C Gwyddion поставляются различные файлы взаимодействия со средой рабочего стола, которые определяют типы MIME, элементы меню, привязки файлов, генерацию миниатюр и т.п. Если Gwyddion устанавливается в системный каталог, они обычно находятся в правильных местах файловой системы. Однако, если вы устанавливаете его куда-то в свой каталог пользователя, то эти файлы нужно поместить в другое место. а именно в определённые скрытые каталоги, начинающиеся с точки в вашем домашнем каталоге.</para>
      <para>Это можно задать с помощью опции <option>--enable-home-installation</option> команды <command>configure</command>. Следует отметить, что использование этой опции приводит к установке файлов в каталоги вне заданного префикса.</para>
    </sect3>
    <sect3 id="installation-unix-source-configuration-packager">
      <title>Настройки создателей пакетов</title>
      <para>Если Gwyddion устанавливается во временный каталог для дальнейшего создания пакета, необходимо отключить определённые действия после установки, которые нужно производить с системой, где пакет будет установлен, а не в момент создания пакета.</para>
      <para>Обновление файлов FreeDesktop может быть отключено с помощью <userinput>--disable-desktop-file-update</userinput>. Установка схем GConf2 может быть отключена с помощью <userinput>--disable-schemas-install</userinput>. Обычно это не надо делать в явной форме т.к. установки в временный каталог используют непустую переменную <varname>DESTDIR</varname> (см. раздел <link linkend="installation-unix-source-installation">установка</link>). Если переменная <varname>DESTDIR</varname> не пустая, система сборки пропустит автоматически действия после установки. Тем не менее, обычной причиной отключения этих действий является то. что Gwyddion устанавливается на временное место вместо финального каталога (что обычно происходит при сборке пакетов в Linux). В этом случае вспомогательные действия отключаются автоматически при непустой переменной <varname>DESTDIR</varname> (см. раздел <link linkend="installation-unix-source-installation">установка</link>) и, следовательно, нет нужды отключать их в <command>configure</command>.</para>
    </sect3>
    <sect3 id="installation-unix-source-configuration-developer">
      <title>Настройки разработчиков</title>
      <para>Если вы собираетесь накладывать патч или иным образом модифицировать исходный код Gwyddion запустите <command>configure</command> с опцией <option>--enable-maintainer-mode</option> чтобы включить различные правила обновления и пересборки, которые не используются при обычной компиляции. В зависимости от вида изменений, могут понадобиться некоторые дополнительные инструменты, описанные в разделе <link linkend="installation-devel">Снимок Subversion, разработка</link>.</para>
    </sect3>
  </sect2>
  <sect2 id="installation-unix-source-compilation">
    <title>Компиляция</title>
    <para>Запустите <informalexample><literallayout><userinput>make</userinput></literallayout></informalexample> и подождите, пока  <application>Gwyddion</application> соберётся. Если команда <command>configure</command> завершилась без ошибок, компиляция тоже должна пройти успешно.</para>
    <para>Если вам понадобилось сделать нечто необычное, чтобы собрать пакет, постарайтесь выяснить, как <command>configure</command> может обнаружить, когда и что делать, и пришлите патчи или инструкции на адрес электронной почты для сообщений об ошибках, чтобы можно было включить их в следующий релиз.</para>
  </sect2>
  <sect2 id="installation-unix-source-installation">
    <title>Установка</title>
    <para><application>Gwyddion</application> нужно установить перед запуском, его нельзя запустить неустановленным.</para>
    <para>Выполните <informalexample><literallayout><userinput>make install</userinput></literallayout></informalexample> для установки <application>Gwyddion</application> в целевой каталог. Если вы устанавливаете <application>Gwyddion</application> в системный каталог, вам необходимо стать суперпользователем чтобы выполнить эту команду. Это <emphasis>единственная</emphasis> команда. которую обязательно нужно запускать от суперпользователя при установке. Например, используя sudo <informalexample><literallayout><userinput>sudo make install</userinput></literallayout></informalexample> </para>
    <para>Чтобы установить <application>Gwyddion</application> во временное место, например, для сборки пакета, установите переменную <command>make</command> <varname>DESTDIR</varname> на префикс, который будет добавлен ко всем целевым каталогам: <informalexample><literallayout><userinput>make install DESTDIR=/var/tmp/gwyddion-buildroot</userinput></literallayout></informalexample> <emphasis>Не</emphasis> переопределяйте переменные отдельных каталогов такие, как <varname>bindir</varname>, <varname>libdir</varname>.</para>
    <para>Если вы не устанавливаете в системный каталог, т.е. устанавливаете в подкаталог домашнего каталога, может потребоваться настройка следующих переменных окружения в процессе установки: <itemizedlist>
        <listitem><varname>GCONF_SCHEMA_CONFIG_SOURCE</varname> – местоположение схем GConf2</listitem>
        <listitem><varname>KDE4_MODULE_DIR</varname> – местоположение модулей KDE4</listitem>
      </itemizedlist> Также может потребоваться настройка переменной <varname>XDG_DATA_DIRS</varname> для полной интеграции с окружением рабочего стола.</para>
    <para>Если вы установили Gwyddion в <filename>/usr/local</filename> и получили сообщение об ошибке <filename>libgwyapp.so.0</filename> не может быть найдена, в вашей системе, по видимому, отсутствуют стандартные каталоги для библиотек в настройках динамического линкера. Такое было замечено на Ubuntu. Отредактируйте файл <filename>/etc/ld.so.conf</filename> и добавьте туда строку <informalexample><programlisting>/usr/local/lib</programlisting></informalexample></para>
  </sect2>
  <sect2 id="installation-unix-source-running">
    <title>Запуск</title>
    <para>Запуск <application>Gwyddion</application> обычно не требует дополнительных настроек.</para>
    <para>Но некорректная реализация особенностей некоторых сред рабочего стола, может привести <application>Gwyddion</application> в нерабочее состояние и эту функциональность нужно отключить. Перехват главного меню программы в <application>Unity</application> делает большую часть меню <application>Gwyddion</application> недоступными. Это можно отключить сбросив переменную окружения <envar>UBUNTU_MENUPROXY</envar> при запуске <application>Gwyddion</application>:<informalexample><literallayout><userinput>UBUNTU_MENUPROXY= gwyddion</userinput></literallayout></informalexample></para>
  </sect2>
  <sect2 id="installation-unix-source-deinstallation">
    <title>Отмена установки</title>
    <para>Запустите <informalexample><literallayout><userinput>make uninstall</userinput></literallayout></informalexample> в каталоге, где ранее собирался <application>Gwyddion</application> для его удаления. Если вы уже утратили содержимое этого каталога, можно попробовать распаковать, настроить и собрать его точно так же, как ранее и после этого выполнить <userinput>make uninstall</userinput>, хотя результат зависит от вашей способности точно повторить процесс сборки.</para>
  </sect2>
  <sect2 id="installation-unix-source-rpm">
    <title>Пакеты RPM</title>
    <para>В основанных на RPM дистрибутивах GNU/Linux можно собрать RPM-пакеты напрямую из архивов с исходным кодом выполнив команду <informalexample><literallayout><userinput>rpmbuild -tb gwyddion-2.26.tar.xz</userinput></literallayout></informalexample> где 2.26 – текущая версия, как упоминалось ранее. Этот метод тестировался в основном на Fedora, openSuSE и Mandriva и spec-файл RPM содержит некоторые специальные положения для этих систем. Специальная поддержка других основанных на RPM систем может быть добавлена по запросу.</para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
