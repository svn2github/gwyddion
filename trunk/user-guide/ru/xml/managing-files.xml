<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id: managing-files.xml 10335 2009-11-01 21:54:24Z yeti-dn $ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="managing-files">
  <title>Управление файлами</title>
  <para>Gwyddion использует свой собственный <link linkend="gwyfile-format">формат данных</link> (<filename>.gwy</filename>) для хранения данных. Этот формат обладает следующими важными преимуществами: <itemizedlist><listitem> Возможностью сохранить полное состояние отдельных данных, включая маски. выделенные области и другие свойства. </listitem><listitem> Произвольное количество каналов, графиков и наборов спектров, с произвольными размерами и единицами измерений как для пространственных координат, так и для значений. </listitem><listitem> Представление всех данных с двойной точностью, предотвращая потери данных в результате округления. </listitem></itemizedlist> Следовательно, мы рекомендуем использовать этот формат для сохранения файлов после обработки.</para>
  <para>Другие форматы файлов данных обрабатываются соответствующими модулями загрузи и сохранения файлов. Помимо большого числа файловых форматов, используемых в сканирующей зондовой микроскопии, могут также быть импортированы графические файлы (PNG, JPEG, TIFF, TARGA) и сырые двоичные и текстовые данные. Если ваш формат данных СЗМ ещё не поддерживается Gwyddion или загружается некорректно, мы рекомендуем вам или написать модуль импорта (если есть такая возможность) или связаться с разработчиками чтобы помочь им улучшить поддержку.</para>
  <para><link linkend="file-formats">Список поддерживаемых форматов файлов</link> приведён в разделе Сводки и таблицы.</para>
  <sect2 id="file-loading">
    <title>Загрузка файлов</title>
    <indexterm>
      <primary>файл</primary>
      <primary>загрузка</primary>
    </indexterm>
    <para>Файлы открываются с помощью меню <menuchoice><guimenu>Файл</guimenu><guisubmenu>Открыть</guisubmenu></menuchoice>. Тип файла определяется автоматически. основываясь только на его содержимом. Поскольку одни и те же расширения такие, как <filename>.img</filename>, <filename>.afm</filename> или <filename>.dat</filename> используются многими различными типами файлов СЗМ этот подход является предпочтительным по сравнению с основанными на расширении файлов.</para>
    <para>Единственным исключением является импорт различных необработанных данных, как двумерных, так и графиков, которые должны быть выбраны явным образом в диалоге открытия файла. Смотрите раздел <link linkend="raw-file-import">Импорт файла с необработанными данными</link>, где описан импорт необработанных данных и извлечение вручную данных из неподдерживаемых форматов и <link linkend="specific-data-import">Импорт специфических данных</link>, где описывается импорт данных XYZ, двоичных изображений и файлов графиков.</para>
    <para>Список файлов в диалоге открытия можно ограничить только теми файлами, которые Gwyddion распознаёт как загружаемые включением опции <guilabel>Показать только загружаемые файлы</guilabel>. Метка типа файла при этом показывает фильтрацию добавлением <guilabel>(отфильтровано)</guilabel> к концу. Это нередко может оказаться удобным, но с другой стороны может замедлить доступ к каталогам с большим числом файлов.</para>
    <informalfigure id="fig-file-open-screenshot">
      <mediaobject>
        <imageobject>
          <imagedata fileref="file-open.png" format="PNG"/>
        </imageobject>
        <caption>Диалог открытия файла с открытыми опциями типа файла и предпросмотра каналов. Мелкий текст над предпросмотром указывает модуль. использованный чтобы загрузить этот файл (nt-mdt) и число каналов (ch), графиков (gr) и данных спектроскопии в точке (sps) в файле.</caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id="file-merging">
    <title>Объединение файлов</title>
    <indexterm>
      <primary>файл</primary>
      <primary>объединение</primary>
    </indexterm>
    <para>Объединение файлов, проводимое с помощью меню <menuchoice><guimenu>Файл</guimenu><guisubmenu>Объединить</guisubmenu></menuchoice>, подобно нормальной загрузке файлов за исключением того, что выбранный файл (или файлы) присоединяется к текущему открытому файлу. Другими словами, каналы, графики и спектры вместе со всеми своими настройками и свойствами добавляются к уже присутствующим в текущем файле.</para>
  </sect2>
  <sect2 id="file-saving">
    <title>Сохранение файлов</title>
    <indexterm>
      <primary>файл</primary>
      <primary>сохранение</primary>
    </indexterm>
    <para>Большая часть предыдущих параграфов также применима к сохранению файлов. Одним из главных различий является надёжность автоматического определения типа файла. В то время, как при загрузке исследуется содержимое файла, сохранение полагается на имя файла и его расширение. В сочетании с большим числом различных типов фалов, использующих одно и то же расширение такое, как <filename>.img</filename>, <filename>.afm</filename> или <filename>.dat</filename> это приводит к неоднозначностям. Выберите тип файла вручную перед сохранением, если вы не уверены.</para>
    <para>Поскольку единственным типом файлов, который может полностью представить структуры данных Gwyddion является его родной формат файла, только сохранение в файл <filename>.gwy</filename> является правильным. Сохранение в другие форматы по существу представляет собой экспорт ограниченного подмножества данных, обычно только активного канала (без масок и презентаций). Следовательно, оно <emphasis>не</emphasis> меняет имя текущего файла на имя только что сохранённого.</para>
  </sect2>
  <sect2 id="document-history">
    <title>Предыдущие документы</title>
    <indexterm>
      <primary>файл</primary>
      <primary>недавно открытые</primary>
    </indexterm>
    <para>История недавно открытых файлов доступна в меню <menuchoice><guimenu>Файл</guimenu><guisubmenu>Последние документы</guisubmenu></menuchoice>. Подменю содержит последние десять недавно использованных файлов для быстрого вызова, более подробная история недавно открытых файлов доступна с помощью последнего пункта меню <guimenuitem>Предыдущие документы</guimenuitem>.</para>
    <para>Список предыдущих документов сортируется по времени последнего обращения к файлу (последний из открытых файлов наверху), содержит изображения предпросмотра и некоторую дополнительную информацию о выбранном канале. Функции нижнего ряда кнопок следующие: <variablelist><varlistentry><term><guibutton>Чистить</guibutton></term><listitem> Удаляет элементы истории с сылками на файлы, которые были удалены или стали больше не доступны по другим причинам. </listitem></varlistentry><varlistentry><term><guibutton>Закрыть</guibutton></term><listitem> Закрывает окно истории открытых документов. </listitem></varlistentry><varlistentry><term><guibutton>Открыть</guibutton></term><listitem> открывает выбранный файл. это можно также сделать активацией выбранной строки. или с помощью двойного щелчка, или с помощью клавиатуры. </listitem></varlistentry></variablelist></para>
    <para>В истории можно искать или фильтровать её по имени с помощью строки Фильтр над кнопками. Фильтр активируется нажатием <keycap>Enter</keycap> в строке ввода шаблона фильтрации. Чтобы показать все элементы истории, очистите эту стоку и активируйте её. Шаблон поиска интерпретируется двояко: <itemizedlist><listitem> Если шаблон содержит групповые символы, т.е. <literal>*</literal> or <literal>?</literal>, он интерпретируется как раскрытие имени файла. Это означает, что <literal>?</literal> заменяет один любой произвольный символ, <literal>*</literal> заменяет произвольную последовательность из нуля и более символов, имя файла должно точно соответствовать шаблону. Следует отметить, что разделители пути (<literal>/</literal> или <literal>\</literal>) не рассматриваются отдельно, следовательно в шаблоне <literal>*.sis</literal> начальная <literal>*</literal> соответствует всем предыдущим компонентам имени каталога. Синтаксис шаблона описан в документации по <ulink url="http://library.gnome.org/devel/glib/stable/glib-Glob-style-pattern-matching.html#glib-Glob-style-pattern-matching.description">GPatternSpec</ulink>. </listitem><listitem> Если шаблон не содержит символов раскрытия, он напрямую ищется как часть имени файла. </listitem></itemizedlist></para>
    <para>Чувствительность поиска к регистру символов, управляемая опцией <guilabel>С учётом регистра</guilabel>, полезна в основном на системах, разделяющих регистр букв в именах файлов, таких как Unix. На системах не различающих самостоятельно регистр символов рекомендуется держать эту опцию выключенной.</para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
