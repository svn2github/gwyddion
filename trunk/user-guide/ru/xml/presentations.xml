<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id: presentations.xml 15807 2014-01-05 14:33:21Z yeti-dn $ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 xmlns:xi="http://www.w3.org/2001/XInclude" id="presentations">
  <title>Презентации</title>
  <para>Модули <link linkend="presentations-masks"> презентаций</link>не изменяют данные, вместо этого они выводят результат в отдельный слой, отображаемый поверх оригинальных данных. Прочие модули и инструменты работы с данными по прежнему будут оперировать с нижележащими данными. Чтобы удалить презентацию нужно нажать правую кнопку мыши в окне данных и выбрать в появившемся меню <guimenuitem>Удалить презентацию</guimenuitem>.</para>
  <sect2 id="presentationops">
    <title>Базовые действия</title>
    <indexterm>
      <primary>презентации</primary>
      <primary>базовые действия</primary>
    </indexterm>
    <para>Меню <menuchoice><guimenu>Обработка данных</guimenu><guisubmenu>Презентация</guisubmenu></menuchoice> содержит несколько основных операций с презентациями:</para>
    <variablelist>
      <varlistentry id="presentation-attach">
        <term><guimenuitem>Присоединить презентацию</guimenuitem></term>
        <listitem>
          <para>Присоединяет другое поле данных как презентацию к текущим данным. Следует отметить, что эта полезная функция иногда может вводить в заблуждение если пытаться получить нечто, основанное на данных, поскольку все расчётные значения получаются из нижележащих данных (а не из презентации, хоть она и выглядит как данные).</para>
        </listitem>
      </varlistentry>
      <varlistentry id="presentation-remove">
        <term><guimenuitem>Удалить презентацию</guimenuitem></term>
        <listitem>
          <para>Удаляет презентацию из текущего окна данных. Этот вариант является альтернативой меню по правой кнопке мыши в окне данных.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="presentation-extract">
        <term><guimenuitem>Извлечь презентацию</guimenuitem></term>
        <listitem>
          <para>Извлекает презентацию из текущего окна данных в новый канал того же файла. Таким способом можно извлечь данные презентации для дальнейшей обработки. Следует отметить, однако, что извлекаемые данные не содержат информации о реальном масштабе, поскольку презентация нужна для визуализации определённых особенностей, но получаемым данным трудно или невозможно присвоить физический смысл. Следовательно, диапазоном значений нового канала всегда будет <xi:include href="eqi-interval-0-1.xml"/>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id="fig-presentation-examples">
      <mediaobject>
        <imageobject>
          <imagedata fileref="presentations.png" format="PNG"/>
        </imageobject>
        <textobject>
          <phrase>Иллюстрация отдельных фильтров презентаций</phrase>
        </textobject>
        <caption>Примеры презентаций: (a) реальные данные, (b) затенение, (c) вертикальный градиент Превитта, (d) поиск краёв Канни, (e) поиска краёв по локальной нелинейности, (f) улучшение локального контраста.</caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id="shade">
    <title>Презентация затенения</title>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guimenuitem>Затенение</guimenuitem>
      </menuchoice>
    </para>
    <indexterm><primary>затенение</primary></indexterm>
    <para>Простой и удобный способ увидеть данные как будто освещёнными с определённого направления. Направление может быть задано пользователем. Также возможно смешивать затенённое и исходное изображения для целей презентации. Разумеется, получающееся в результате изображение не имеет смысла с физической точки зрения.</para>
  </sect2>
  <sect2 id="gradient">
    <title>Презентации обнаружения градиента</title>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guimenuitem>Градиент</guimenuitem>
      </menuchoice>
    </para>
    <indexterm><primary>фильтры градиента</primary></indexterm>
    <indexterm><primary>фильтр Собела</primary></indexterm>
    <indexterm><primary>фильтр Превитта</primary></indexterm>
    <para>Фильтры горизонтальных и вертикальных градиентов Собела и Превитта создают изображения, похожие на затемнение, однако, они выводят данные как результат свёртки данных с относительно стандартизованным ядром. Следовательно, они могут использоваться для дальнейшей обработки презентаций, например. Ядра для горизонтальных фильтров приведены ниже, вертикальные ядра отличаются только отражением относительно главной диагонали. <xi:include href="eq-filters-sobel-prewitt.xml"/></para>
  </sect2>
  <sect2 id="edge">
    <title>Презентации поиска края</title>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guisubmenu>Выделение края</guisubmenu>
      </menuchoice>
    </para>
    <indexterm><primary>выделение края</primary></indexterm>
    <indexterm><primary>поиск края</primary></indexterm>
    <para>Нередко возникает задача визуализации разрывов непрерывности. присутствующих на изображении, в частности, разрыв непрерывности значений (нулевого порядка) и непрерывности производных (первого порядка). Хотя методы обнаружения обоих называют методами <quote>обнаружения края</quote>, они в реальности достаточно сильно отличаются, поэтому мы будем называть первые обнаружением ступеней и вторые как обнаружение края (кромки). Методы обнаружения более частных особенностей, т.е. углов, также широко используются, эти методы обычно относятся к нулевому порядку.</para>
    <para>Порядок метода обнаружения разрывов непрерывности легко может быть виден на выводимом изображении. поскольку методы обнаружения краёв обычно дают типичные двойные линии на разрывах значений, как показано на следующем рисунке. В то время, как у идеальной ступеньки положения верхней и нижней кромки совпадают, данные реального мира имеют тенденцию содержать две отдельных кромки как показано на рисунке. Кроме того, нахождение двух кромок на ступеньке данных, даже на идеально острой, нередко является врождённой чертой методов обнаружения кромок.</para>
    <informalfigure id="fig-step-vs-edge">
      <mediaobject>
        <imageobject>
          <imagedata fileref="step-edge.pdf" format="PDF"/>
        </imageobject>
        <imageobject>
          <imagedata fileref="step-edge.png" format="PNG"/>
        </imageobject>
        <textobject>
          <phrase>Схематичное изображение одномерной ступеньки и края (кромки)</phrase>
        </textobject>
        <caption>Ступенька против кромки в одномерном мире.</caption>
      </mediaobject>
    </informalfigure>
    <para>В Gwyddion доступны следующие функции обнаружения ступеньки и кромки (последние являются в некоторой степени экспериментальными, с другой стороны обычно они дают лучшие результаты по сравнению с хорошо известными алгоритмами):</para>
    <variablelist>
      <varlistentry id="edge-canny">
        <term>
          <guilabel>Канни</guilabel>
        </term>
        <listitem>
          <indexterm>
            <primary>Канни</primary>
            <secondary>выделение края</secondary>
          </indexterm>
          <para>Метод обнаружения края Канни — хорошо известный метод обнаружения ступеней и может быть использован чтобы извлекать изображения резких разрывов значений данных в виде тонких однопиксельных линий.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-log">
        <term>
          <guilabel>Лапласиан гауссианов</guilabel>
        </term>
        <listitem>
          <indexterm>
            <primary>Лапласиан гауссианов</primary>
          </indexterm>
          <para>Лапласиан представляет собой простую свёртку со следующим ядром (которая является пределом дискретного фильтра лапласиана гауссианов при <xi:include href="eqi-sigma-to-0.xml"/>): <xi:include href="eq-filters-laplacian.xml"/></para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-zero-crossing">
        <term>
          <guilabel>Пересечение нуля</guilabel>
        </term>
        <listitem>
          <indexterm>
            <primary>обнаружение края пересечением нуля</primary>
          </indexterm>
          <para>Алгоритм обнаружения края пересечением нуля помечает линии там, где результат фильтра лапласиана гауссианов меняет знак, т.е. пересекает ноль. Полуширина на половинной высоте гауссианов определяет уровень выделяемых деталей. Порог позволяет исключить смену знака со слишком малым абсолютным значением соседних пикселей, убирая мелкий шум. Следует заметить, однако, что для ненулевого порога линии краёв могут перестать быть непрерывными.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-step">
        <indexterm>
          <primary>поиск края</primary>
        </indexterm>
        <term>
          <guilabel>Ступень</guilabel>
        </term>
        <listitem>
          <para>Алгоритм обнаружения ступеней обеспечивает хорошее разрешение, т.е. острые линии разрыва, и хороший динамический диапазон при этом будучи относительно нечувствителен к шуму. Принцип достаточно прост: он показывает квадратный корень разницы между квантилями 2/3 и 1/3 от значений данных в круговой окрестности радиусом в 2,5 пикселя с центром в каждом дискретном значении.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-rms">
        <term>
          <guilabel>Ср. квадр.</guilabel>
        </term>
        <listitem>
          <indexterm>
            <primary>ср. квадр.</primary>
            <secondary>выделение края</secondary>
          </indexterm>
          <para>Обнаружение ступеней показывает области с высоким локальным изменением значений. Рассчитывается и показывается среднеквадратичное отклонение от среднего значения в круговой окрестности радиуса 2,5 пикселя с центром в каждом дискретном значении.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-rms-edge">
        <term>
          <guilabel>Кромка среднеквадратичного отклонения</guilabel>
        </term>
        <listitem>
          <indexterm><primary>поиск края по кромке среднеквадратичного отклонения</primary></indexterm>
          <para>Эта функция просто обрабатывает вывод среднеквадратичного отклонения фильтром, подобным лапласиану, чтобы усилить границы областей с большим локальным разбросом значений. Несмотря на имя это по прежнему средство обнаружения ступеней.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-local-nonlinearity">
        <term>
          <guilabel>Локальная нелинейность</guilabel>
        </term>
        <listitem>
          <indexterm><primary>поиск края по локальной нелинейности</primary></indexterm>
          <para>Средство обнаружения края которое показывает области, сильно не плоские локально. Аппроксимирует плоскостью круговую окрестность радиусом в 2,5 пикселя с центром в каждом отсчёте и затем рассчитывает остаточную сумму квадратов аппроксимации пересчитанную в наклон плоскости, т.е. делённую на <xi:include href="eqi-1-plus-b_x-to-2-plus-b_y-to-2.xml"/> где <xi:include href="eqi-b_x.xml"/> и <xi:include href="eqi-b_y.xml"/> - коэффициенты плоскости в направлениях include href="eqi-x.xml"/&gt; и <xi:include href="eqi-y.xml"/> соответственно. Затем отображается квадратный корень.</para>
        </listitem>
      </varlistentry>
      <varlistentry id="edge-inclination">
        <indexterm>
          <primary>наклон</primary>
          <secondary>фильтр поиска кромки</secondary>
        </indexterm>
        <term>
          <guilabel>Наклон</guilabel>
        </term>
        <listitem>
          <para>Показывает угол <xi:include href="eqi-theta.xml"/> наклона локальной плоскости. Технически эта функция относится к детекторам ступени, однако. выделение ступеней на результате вывода не слишком сильное и она больше предназначена для легкого визуального сравнения различных наклонов, представленных на изображении.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <informalfigure id="fig-edge-method-comparison">
      <mediaobject>
        <imageobject>
          <imagedata fileref="edge-method-comparison.png" format="PNG"/>
        </imageobject>
        <textobject>
          <phrase>Сравнение методов обнаружения ступеней и кромок на нескольких изображениях</phrase>
        </textobject>
        <caption>Сравнение методов обнаружения ступеней и кромок на нескольких интересных или типичных примерах данных. Канни и пересечение нуля — детекторы ступеней, которые выводят линии края шириной в один пиксель, ступень и наклон — детекторы ступеней с непрерывным выводом, локальная нелинейность — детектор кромки, детектирование кромки легко можно наблюдать на втором и третьем ряду. Следует отметить, что пересечение нуля можно настраивать, его параметры подбирались чтобы получить вменяемый результат для каждого примера.</caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id="local-contrast">
    <title>Локальный контраст</title>
    <indexterm><primary>улучшение локального контраста</primary></indexterm>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guimenuitem>Локальный контраст</guimenuitem>
      </menuchoice>
    </para>
    <para>Метод для показа деталей в областях, где присутствует большое и малое изменение значений одновременно. Это достигается расчётом диапазона локального изменения значений, или разброса, вокруг каждого отсчёта данных и растягивание его таким образом, чтобы сделать этот разброс одинаковым для всех данных.</para>
  </sect2>
  <sect2 id="rank">
    <title>Ранг</title>
    <indexterm><primary>локальное преобразование ранжирования</primary></indexterm>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guimenuitem>Ранг</guimenuitem>
      </menuchoice>
    </para>
    <para>Альтернативный метод улучшения локального контраста. Это выравнивающий фильтр верхних частот, чем-то противоположный медианному фильтру. Каждое значение пикселя преобразуется в его ранг среди всех значений в определённой окрестности. Радиус окрестности задаётся параметром <guilabel>размер ядра</guilabel>.</para>
    <para>В результате получается что все локальные максимумы приводятся к одному одинаковому максимальному значению, все локальные минимумы к одинаковому минимальному и все значения, не являющиеся ни максимумом, ни минимумом преобразуются к диапазону между ними, основанному на их ранге. Поскольку результат применения фильтра с радиусом <xi:include href="eqi-r.xml"/> может содержать максимально <xi:include href="eqi-pi-r-plus-1-over-2-to-2.xml"/> различных значений (приблизительно), фильтр также приводит к дискретизации значений, особенно для малых размеров ядра фильтра.</para>
  </sect2>
  <sect2 id="logscale">
  <title>Логарифмический масштаб</title>
    <indexterm><primary>логарифмический масштаб</primary></indexterm>
    <para>
      <menuchoice>
        <guimenu>Обработка данных</guimenu>
        <guisubmenu>Презентация</guisubmenu>
        <guimenuitem>Логарифмический масштаб</guimenuitem>
      </menuchoice>
    </para>
    <para>Логарифмический масштаб используется для презентации данных с помощью шкалы псевдоцвета.</para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
