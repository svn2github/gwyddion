<?xml version="1.0" encoding="utf-8"?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="installation-ms-windows-source">
  <title>MS Windows из архива с исходным кодом</title>
  <warning>
    <para>Последняя версия Gwyddion, которую можно собрать используя MSVC6 – 2.22.</para>
  </warning>
  <para>Система сборки <application>Gwyddion</application> под MS Windows использует компилятор <application>Microsoft Visual C++</application> (MSVC)  (рекомендованная версия 6, хотя она уже несколько устарела). Она в основном состоит из набора файлов сборки <command>nmake</command>, следовательно, компиляция осуществляется из командной строки. Это подход имеет ряд преимуществ в плане воспроизводимости и автоматизации процесса. Более того, он позволяет легко синхронизировать сборочные системы под Unix и MS Windows. Необходимость использования командной строки может считаться недостатком, хотя вам процесс сборки должен показаться достаточно простым даже если вы не работали много с командной строкой.</para>
  <para>В дополнение к MSVC вам потребуется установить среду разработки Gtk+. Снова мы рекомендуем использовать пакет <ulink url="http://downloads.sourceforge.net/gladewin32/gtk-dev-2.12.9-win32-2.exe">GladeWin32</ulink>. Следует отметить, что он содержит полную среду времени исполнения, следовательно, вам не нужно устанавливать её, если вы установили версию для разработчика.</para>
  <sect2 id="installation-ms-windows-source-unpacking">
    <title>Распаковка</title>
    <para>Распакуйте архив с исходным кодом своим любимым (раз)архиватором или файловым менеджером. Архивы, сжатые <ulink url="http://www.bzip.org/">bzip2</ulink> (<filename>.bz2</filename>) значительно меньше, чем архивы <ulink url="http://www.gzip.org/">gzip</ulink> (<filename>.gz</filename>),</para>
    <para>При распаковке будет создан каталог <filename>gwyddion-2.19</filename> (2.19 заменяется номером текущей версии), где и будут происходить все остальные действия по компиляции.</para>
  </sect2>
  <sect2 id="installation-ms-windows-source-configuration">
    <title>Настройка</title>
    <para>Откройте файл <filename>make.msc</filename> в текстовом редакторе. Он начинается примерно так:</para>
    <informalexample>
      <programlisting><![CDATA[
# @(#) $Id$
#
# XXX: Set following to your Gtk+-Development and MSVC paths
#
# The uncommented paths should work for default MSVC 6 installation and for
# default GladeWin32 installation.
# If you have GtkGLext separate from Gtk+, define GTKGLEXT_TOP accordingly.
# If you have LibXML2 separate from Gtk+, define LIBXML2_TOP accordingly.
GTK_TOP = C:\Gtk
GTKGLEXT_TOP = $(GTK_TOP)
LIBXML2_TOP = $(GTK_TOP)
#GTKGLEXT_TOP = C:\GtkGLExt\1.0
#LIBXML2_TOP = C:\libxml2
MSC_TOP = C:\Program Files\Microsoft Visual Studio\VC98
]]></programlisting>
    </informalexample>
    <para>Проверьте и исправьте пути в соответствии с инструкциями. Часто изменения не требуются, поскольку пути в файле представляют собой пути установки по умолчанию для каждой из программ.</para>
    <variablelist>
      <varlistentry>
        <term><envar>GTK_TOP</envar></term>
        <listitem>Должен указывать на каталог верхнего уровня установки Gtk+, т.е. на каталог, содержащий подкаталоги <filename>bin</filename>, <filename>lib</filename>, <filename>share</filename>, и т.п. Ниже мы будем ссылаться на его значение как <envar>$(GTK_TOP)</envar>.</listitem>
      </varlistentry>
      <varlistentry>
        <term><envar>GTKGLEXT_TOP</envar></term>
        <listitem>Должен указывать на каталог верхнего уровня установки GtkGLExt. Он будет отличаться от <envar>$(GTK_TOP)</envar> только если вы не используете GladeWin32 и установили GtkGLExt отдельно.</listitem>
      </varlistentry>
      <varlistentry>
        <term><envar>LIBXML2_TOP</envar></term>
        <listitem>Должен указывать на каталог верхнего уровня установки LibXML2. Он будет отличаться от <envar>$(GTK_TOP)</envar> только если вы не используете GladeWin32 и установили LibXML2 отдельно.</listitem>
      </varlistentry>
      <varlistentry>
        <term><envar>MSC_TOP</envar></term>
        <listitem>Должен указывать на каталог верхнего уровня установки MSVC.</listitem>
      </varlistentry>
    </variablelist>
    <para>Запустите оболочку (коммандную строку, приглашение MS-DOS), перейдите в каталог с исходным кодом и запустите <command>vcvars32.bat</command> там. Этот пакетный исполняемый файл предоставлен MSVC и устанавливает определённые переменные окружения, которые нужны компилятору командной строки и компоновщику, также делает их исполняемыми напрямую устанавливая переменную <envar>PATH</envar>. Следует заметить, что <command>vcvars32.bat</command> может сама быть не в каталогах, включенных в <envar>PATH</envar>, но её должно быть легко найти. </para>
  </sect2>
  <sect2 id="installation-ms-windows-source-compilation">
    <title>Компиляция</title>
    <para>Запустите <informalexample><literallayout><userinput>nmake -f makefile.msc</userinput></literallayout></informalexample> чтобы собрать Gwyddion и <informalexample><literallayout><userinput>nmake -f makefile.msc install</userinput></literallayout></informalexample> чтобы установить его во временный каталог, а именно подкаталог <filename>inst</filename> (создаваемый этой командой). Если что-то пошло не так и вы хотите запустить всё заново, сначала удалите каталог <filename>inst</filename> и файл <filename>inst.stamp</filename> для старта с нуля.</para>
  </sect2>
  <sect2 id="installation-ms-windows-source-installation">
    <title>Установка</title>
    <para>Внутреннее расположение временной области в каталоге <filename>inst</filename> точно такое же, как в конечной установке. Следовательно, можно также запустить <application>Gwyddion</application> прямо из неё (<filename>gwyddion.exe</filename> находится прямо в <filename>inst</filename>). Исключение составляет случай. если вы никогда не запускали <application>Gwyddion</application> ранее, при этом он не найдёт требующиеся библиотеки Gtk+ (DLL). Запустите <command>regedit</command>, создайте в <informalexample><literal>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\Current Version\App Paths\Gwyddion.exe</literal></informalexample> строковый ключ <literal>Path</literal> и поместите туда <literal>$(GTK_TOP)\lib;$(GTK_TOP)\bin</literal> (здесь снова <envar>$(GTK_TOP)</envar> необходимо заменить соответствующим каталогом, установленным в <filename>make.msc</filename>, не надо писать туда <quote><literal>$(GTK_TOP)</literal></quote> буквально). Если вы отдельно устанавливали GtkGLExt и/или LibXML2, добавьте также их каталоги <filename>lib</filename> и <filename>bin</filename>, разделённые точками с запятой. Если вам нельзя редактировать глобальные ключи реестра в <literal>HKEY_LOCAL_MACHINE</literal>, установите пути в <literal>HKEY_CURRENT_USER</literal> только для текущего пользователя.</para>
    <para>После этого можно как  запустить <application>Gwyddion</application> из <filename>inst</filename>, так и скопировать каталог куда-то ещё, возможно переименовав его.</para>
  </sect2>
  <sect2 id="installation-ms-windows-source-installers">
    <title>Системы установки</title>
    <para>Чтобы создать программу установки вам нужен <ulink url="http://www.jrsoftware.org/isinfo.php">Inno Setup</ulink>, версии 4 или новее. Откройте <filename>inst/gwyddion.iss</filename> и соберите установщик, он создаст <filename>Gwyddion-2.19.exe</filename> (где 2.19 заменится текущим номером версии) снова в <filename>inst</filename>. Можно повторить процедуру с <filename>inst/gwyddion-devel.iss</filename> чтобы получить <filename>Gwyddion-Development-2.19.exe</filename>, если он вам зачем-то понадобится.</para>
  </sect2>
</sect1>
