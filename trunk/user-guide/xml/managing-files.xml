<?xml version='1.0' encoding='utf-8'?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
               'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd'>
<sect1 id='managing-files'>
  <title>Managing Files</title>
  <para>
    Gwyddion uses its <link linkend='gwyfile-format'>custom data format</link>
    (<filename>.gwy</filename>) to store data.  This format has the following
    important advantages:
    <itemizedlist>
      <listitem>
        Capability to stores complete processing state of the individual data,
        including masks, selections and other settings.
      </listitem>
      <listitem>
        Arbitrary number of channels, graphs and spectrum sets, with arbitrary
        dimensions and units of both dimensions and values.
      </listitem>
      <listitem>
        Double-precision representation of all data, preventing information
        loss due to rounding.
      </listitem>
    </itemizedlist>
    Therefore, we recommned to use this format for saving of processed files.
    If you open our sample files, you can see that each one is plotted in
    different false color palette.  This is direct consequence of the fact that
    Gwyddion stores the full state of the data window including its palette.
  </para>
  <para>
    Other data file formats are handled with appropriate file loading and
    saving modules. Beside a large number of file formats used in scanning
    probe microscopy, graphical file types (PNG, JPEG, TIFF, TARGA) and raw
    binary and ASCII data can be imported too.  If your SPM data format is not
    supported by Gwyddion yet or it is loaded incorrectly, you are encouraged
    to write an import module (if you can program) or contact the maintainers
    to help them improve the support.
  </para>
  <table frame='none' id='table-file-formats'>
    <title>Supported file formats</title>
    <indexterm>
      <primary>file</primary>
      <primary>supported formats</primary>
    </indexterm>
    <tgroup cols='6'>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <thead>
        <row>
          <entry>File Format</entry>
          <entry>Extensions</entry>
          <entry>Supported By</entry>
          <entry>Read</entry>
          <entry>Write</entry>
          <entry>SPS</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry>APE Research</entry>
          <entry>.dat</entry>
          <entry>apefile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>ASCII data (raw)</entry>
          <entry></entry>
          <entry>rawfile, rawgraph,
            <footnote id='file-format-fn-rawgraph'>
              <para>
                Only simple two-column files are imported.
              </para>
            </footnote>
            asciiexport modules</entry>
          <entry>Yes</entry>
          <entry>
            Yes
            <footnote id='file-format-fn-rawfile'>
              <para>
                Currently, only a simple data-matrix format can be exported.
              </para>
            </footnote>
          </entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Assing AFM</entry>
          <entry>.afm</entry>
          <entry>assing-afm module</entry>
          <entry>Yes</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Image Metrology BCR, BCRF</entry>
          <entry>.bcr, .bcrf</entry>
          <entry>bcrfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Binary data (raw)</entry>
          <entry></entry>
          <entry>rawfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Burleigh v2.1</entry>
          <entry>.img</entry>
          <entry>burleigh module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Burleigh BII</entry>
          <entry>.bii</entry>
          <entry>burleigh_bii module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Burleigh exported</entry>
          <entry>.txt, .bin</entry>
          <entry>burleigh_exp module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Createc</entry>
          <entry>.dat</entry>
          <entry>createc module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>DME Rasterscope</entry>
          <entry>.img</entry>
          <entry>dmefile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>ECS</entry>
          <entry>.img</entry>
          <entry>ecsfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Gwyddion native</entry>
          <entry>.gwy</entry>
          <entry>gwyfile module</entry>
          <entry>Yes</entry>
          <entry>Yes</entry>
          <entry>Yes</entry>
        </row>
        <row>
          <entry>PSI HDF4</entry>
          <entry>.hdf</entry>
          <entry>hdf4file module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Hitachi AFM</entry>
          <entry>.afm</entry>
          <entry>hitachi-afm module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Intematix SDF</entry>
          <entry>.sdf</entry>
          <entry>intematix module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>JEOL SPM</entry>
          <entry>.tif</entry>
          <entry>jeol module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>JPK Instruments</entry>
          <entry>.jpk</entry>
          <entry>jpkscan module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>ADE Phase Shift MapVue</entry>
          <entry>.map</entry>
          <entry>mapvue module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Zygo binary MetroPro</entry>
          <entry>.dat</entry>
          <entry>metropro module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>MicroProf FRT</entry>
          <entry>.txt</entry>
          <entry>microprof module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Micromap</entry>
          <entry>.sdfa</entry>
          <entry>sdfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Molecular Imaging MI</entry>
          <entry>.mi</entry>
          <entry>mifile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>Limited
            <footnote id='file-format-fn-sps-limited'>
              <para>
                Spectra curves are imported as graphs, positional information
                is lost.
              </para>
            </footnote>
          </entry>
        </row>
        <row>
          <entry>Molecular Imaging STP</entry>
          <entry>.stp</entry>
          <entry>stpfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanoeducator</entry>
          <entry>.spm, .mspm, .stm</entry>
          <entry>nanoeducator module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>Yes</entry>
        </row>
        <row>
          <entry>Nanonis</entry>
          <entry>.sxm</entry>
          <entry>nanonis module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanoscope</entry>
          <entry></entry>
          <entry>
            nanoscope, nanoscope-ii modules
            <footnote id='file-format-fn-nanoscope'>
              <para>
                Nanoscope II and Nanoscope III (and newer) are two distinct
                file formats, nanoscope loads the newer files while
                nanoscope-ii loads the old version II files.
              </para>
            </footnote>
          </entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanosurf</entry>
          <entry>.ezd, .nid</entry>
          <entry>ezdfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanotop</entry>
          <entry>.spm</entry>
          <entry>nanotop module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>GXSM netCDF</entry>
          <entry>.nc</entry>
          <entry>netcdf module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>NT-MDT</entry>
          <entry>.mdt</entry>
          <entry>nt-mdt module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Olympus LEXT OLS3000</entry>
          <entry>.old</entry>
          <entry>ols module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Omicron Scala</entry>
          <entry>.par + data</entry>
          <entry>omicron module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>Yes</entry>
        </row>
        <row>
          <entry>Omicron MATRIX</entry>
          <entry>.mtrx + data</entry>
          <entry>omicronmatrix module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Wyko OPD and ASC</entry>
          <entry>.opd, .asc</entry>
          <entry>opdfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Pacific Nanotechnology PNI</entry>
          <entry>.pni</entry>
          <entry>pnifile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Pixmap images</entry>
          <entry>
            .png, .jpeg, .tiff, .ppm, .tga, .bmp
            <footnote id='file-format-fn-pixmap-import'>
              <para>
                And others, namely for import. The exact list depends on
                formats supported by libraries on the particular platform.
              </para>
            </footnote>
          </entry>
          <entry>pixmap module</entry>
          <entry>Yes</entry>
          <entry>
            Yes
            <footnote id='file-format-fn-pixmap-export'>
              <para>
                Alhough this is usually lossy. Export to pixmap graphics is
                intended for presentational purpose mainly.
              </para>
            </footnote>
          </entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>PSIA</entry>
          <entry>.tiff</entry>
          <entry>psia module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Quesant</entry>
          <entry>.afm</entry>
          <entry>quesant module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>RHK Technology SPM32</entry>
          <entry>.sm2</entry>
          <entry>rhk-spm32 module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>Limited
            <footnoteref linkend='file-format-fn-sps-limited'/>
          </entry>
        </row>
        <row>
          <entry>RHK Technology SM3</entry>
          <entry>.sm3</entry>
          <entry>rhk-sm3 module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>Limited
            <footnoteref linkend='file-format-fn-sps-limited'/>
          </entry>
        </row>
        <row>
          <entry>Seiko</entry>
          <entry>.xqd</entry>
          <entry>seiko module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Sensofar</entry>
          <entry>.plu</entry>
          <entry>sensofar module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Sensolytics</entry>
          <entry>.dat</entry>
          <entry>sensolytics module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Scanning Probe Microscopy Markup Langugae</entry>
          <entry>.xml</entry>
          <entry>spml module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Shimadzu</entry>
          <entry></entry>
          <entry>shimadzu module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>IonScope SICM</entry>
          <entry>.img</entry>
          <entry>sicmfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>SPIP ASCII export</entry>
          <entry>.asc</entry>
          <entry>spipasc module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Surfstand Surface Data File</entry>
          <entry>.sdf</entry>
          <entry>sdfile module</entry>
          <entry>Yes</entry>
          <entry>
            Yes
            <footnote id='file-format-fn-surfstand'>
              <para>
                Only the text variant can be exported at present.
              </para>
            </footnote>
          </entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>STMPRG</entry>
          <entry></entry>
          <entry>stmprg module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>CSM Surf</entry>
          <entry>.sur</entry>
          <entry>surffile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Surface Imaging Systems</entry>
          <entry>.sis</entry>
          <entry>sis module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Veeco Instruments</entry>
          <entry>.zfr, .tfr, .zfp, …</entry>
          <entry>spmlab module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Veeco Instruments FLT</entry>
          <entry>.flt</entry>
          <entry>spmlabf module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Unisoku</entry>
          <entry>.hdr + .dat</entry>
          <entry>unisoku module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>WITec</entry>
          <entry>.wit</entry>
          <entry>witfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>WSxM (Nanotec)</entry>
          <entry>.tom, .stp</entry>
          <entry>wsxmfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
          <entry>No</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <sect2 id='file-loading'>
    <title>File Loading</title>
    <indexterm>
      <primary>file</primary>
      <primary>loading</primary>
    </indexterm>
    <para>
      Many SPM file formats use identical file extensions such as
      <filename>.img</filename>, <filename>.afm</filename> or
      <filename>.dat</filename>.  This, however,
      cannot confuse Gwyddion because it detects the file format automatically
      based solely on file contents.  Thanks to the efficiency of the automated
      detection you should rarely need to intervene and select file types
      manually.
      See <link linkend='raw-file-import'>Raw Data File Import</link>
      for details of import of data from unsupported formats and from
      <link linkend='pixmap-file-import'>pixmap images</link>.
    </para>
    <para>
      If necessary, it is possible to enforce an attempt to load the file
      assuming a particular format by expanding the <guilabel>File
        type</guilabel> selector and choosing a file type.  However, if the
      file format is not detected automatically it is quite unlikely the file
      can be loaded at all.
    </para>
    <para>
      By enabling <guilabel>Show only loadable files of selected
        type</guilabel> the file list can be limited only to the selected
      type.  The file type label then indicates the filtering by appending
      <guilabel>(filtered)</guilabel> to the end.  In the case of
      <guilabel>Automatically detected</guilabel> file type this means
      the list to files is limited to those Gwyddion thinks it can load.
      This can be very convenient, on the other hand it can slow down listing
      of directories with many files.
    </para>
    <para>
      Once a file type is selected it remains selected even in subsequent
      file open dialog invocations.  If you seem to be suddenly unable to
      load a file, check the file type is set to the corresponding
      type, or to <guilabel>Automatically detected</guilabel>.
    </para>
    <informalfigure id='fix-file-open-screenshot'>
      <mediaobject>
        <imageobject>
          <imagedata fileref='file-open.png' format='PNG'/>
        </imageobject>
        <caption>
          File open dialog with expanded file type options and channel preview.
          The small text above the preview shows the module used to load the
          file (sis) and the number of channels (ch), graphs (gr) and
          single-point spectra (sps) in the file.
        </caption>
      </mediaobject>
    </informalfigure>
  </sect2>
  <sect2 id='file-merging'>
    <title>File Merging</title>
    <indexterm>
      <primary>file</primary>
      <primary>merging</primary>
    </indexterm>
    <para>
      File merging is similar to normal file loading, except that the
      selected file (or files) is merged into the current open file.  In
      other words, channels, graphs and spectra, together with all their
      settings and properties are added to those already present in the
      current file.
    </para>
  </sect2>
  <sect2 id='file-saving'>
    <title>File Saving</title>
    <indexterm>
      <primary>file</primary>
      <primary>saving</primary>
    </indexterm>
    <para>
      Much of the previous paragraphs applies to file saving too.  One of the
      main differences is the reliability of automatic file type determination.
      While loading can and does examine the file contents, saving depends
      on file name and extension.  Combined with the large number of
      different file types using the same extension such as
      <filename>.img</filename>, <filename>.afm</filename> or
      <filename>.dat</filename> it leads to ambiguities.  Select the file
      type explicitly before saving if you are unsure.
    </para>
    <para>
      Since the only file type able to fully represent Gwyddion data
      structures is its native data format, saving to
      a <filename>.gwy</filename> file is the only proper saving.  Saving to
      other file formats essentially consists of exporting of a limited
      subset of the data, typically only the active channel (without masks
      and presentations).  Therefore it does <emphasis>not</emphasis>
      change the file name of the current file to the just saved file name.
    </para>
  </sect2>
  <sect2 id='document-history'>
    <title>Document History</title>
    <indexterm>
      <primary>file</primary>
      <primary>recently open</primary>
    </indexterm>
    <para>
      The history of recently opened files can be accessed with
      <menuchoice>
        <guimenu>File</guimenu>
        <guisubmenu>Open Recent</guisubmenu>
      </menuchoice>.
      The submenu contains the last 10 recently used files for quick recalling,
      an extensive recent file history is accessed with the last item
      <guimenuitem>Document History</guimenuitem>.
    </para>
    <para>
      Document history lists the files sorted by the last access time (the
      most recently accessed at the top), with previews and some additional
      information about a selected channel.  The function of the bottom row
      of buttons is following:
      <variablelist>
        <varlistentry>
          <term><guibutton>Prune</guibutton></term>
          <listitem>
            Removes history entries of files that have been deleted or are
            no longer accessible for other reasons.
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guibutton>Close</guibutton></term>
          <listitem>
            Closes the document history window.
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guibutton>Open</guibutton></term>
          <listitem>
            Opens the selected file.  This can be also achieved by activating
            the selected row, either by double-clicking or with the keyboard.
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
    <para>
      The history can be searched/filtered by file name using the filter
      controls above the buttons.  The filter is activated by pressing
      <keycap>Enter</keycap> in the filter pattern entry.  To display all
      history entries, clear the entry and activate it.  The filter pattern
      is interpreted in two ways:
      <itemizedlist>
        <listitem>
          If the pattern contains wildcards, i.e. <literal>*</literal> or
          <literal>?</literal>, it is interpreted as file glob.  This means
          <literal>?</literal> represents a signle arbitrary character,
          <literal>*</literal> represents an arbitrary sequence of zero or
          more characters, and the file name has to precisely match the
          pattern.  Note directory separators (<literal>/</literal> or
          <literal>\</literal>) are not treated specially, therefore in the
          pattern <literal>*.sis</literal> the initial <literal>*</literal>
          matches all leading directory components.  The pattern syntax is
          described in
          <ulink url='http://library.gnome.org/devel/glib/stable/glib-Glob-style-pattern-matching.html#glib-Glob-style-pattern-matching.description'>GPatternSpec</ulink>
          documentation.
        </listitem>
        <listitem>
          If the pattern does not contain any wildcards, it is directly
          searched as a part of the file name.
        </listitem>
      </itemizedlist>
    </para>
    <para>
      Search case sensitivity, controlled by option <guilabel>Case
        sensitive</guilabel>, is useful mainly on systems distinguishing
      letter case in file names, such as Unix.  On systems that do not
      distinguish the case themselves it is recommended to keep the setting
      on case insensitive.
    </para>
  </sect2>
</sect1>
<!-- vim: set ts=2 sw=2 et : -->
