<?xml version='1.0' encoding='utf-8'?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.2//EN'
               'http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd'>
<section id="managing-files">
  <title>Managing files</title>
  <para>
    Gwyddion uses its internal data format (.gwy) to store data. The main
    advantage of this format is fact, that it stores complete state of
    processing of concrete data, including selections and other tool and
    processing fucntion settings. Therefore we recommned to use this format
    for saving processed files. If you open our example files, you can see
    that each one is plotted in different false color palette. This is direct
    consequence of the fact that Gwyddion stores full state of the data
    window including its palette.
  </para>
  <para>
    Other data file formats can be handled with appropriate loading and
    saving modules or plugins. Currently, a lot of simple file formats can be
    used with Gwyddion. This means namely graphical file types (JPEG, PNG,
    PPM, TIFF, BMP) and raw binary and ASCII data.
  </para>
  <para>
    We expect that more file IO modules and plugins will be written,
    depending on demands and file format specifications available. We
    encourage you to write IO module or plugin for your instrument-specific
    data file format, or, at least, to send us your format specifications.
  </para>
  <table frame='none'>
    <title>Supported file formats</title>
    <tgroup cols='2'>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <colspec align='left'/>
      <thead>
        <row>
          <entry>File Format</entry>
          <entry>Extensions</entry>
          <entry>Supported By</entry>
          <entry>Read</entry>
          <entry>Write</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry>APE Research</entry>
          <entry>.dat</entry>
          <entry>apefile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>ASCII data (raw)</entry>
          <entry></entry>
          <entry>rawfile, asciiexport modules</entry>
          <entry>Yes</entry>
          <entry>
            Yes
            <footnote id='file-format-fn1'>
              <para>
                Only a simple data-matrix format si currently supported.
              </para>
            </footnote>
          </entry>
        </row>
        <row>
          <entry>Assing AFM</entry>
          <entry>.afm</entry>
          <entry>assing-afm module</entry>
          <entry>Yes</entry>
          <entry>Yes</entry>
        </row>
        <row>
          <entry>Image Metrology BCR, BCRF</entry>
          <entry>.bcr, .bcrf</entry>
          <entry>bcrfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Binary data (raw)</entry>
          <entry></entry>
          <entry>rawfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Createc</entry>
          <entry>.dat</entry>
          <entry>createc module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Gwyddion native</entry>
          <entry>.gwy</entry>
          <entry>gwyfile module</entry>
          <entry>Yes</entry>
          <entry>Yes</entry>
        </row>
        <row>
          <entry>Molecular Imaging</entry>
          <entry>.stp</entry>
          <entry>stpfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanoscope</entry>
          <entry></entry>
          <entry>nanoscope module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Nanosurf</entry>
          <entry>.ezd</entry>
          <entry>ezdfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>NT-MDT</entry>
          <entry>.mdt</entry>
          <entry>nt-mdt module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Pixmap images</entry>
          <entry>
            .png, .jpeg, .ppm, .tga, .bmp
            <footnote>
              <para>
                And others, namely for import. The exact list depends on
                formats supported by libraries on particular platform.
              </para>
            </footnote>
          </entry>
          <entry>pixmap module</entry>
          <entry>Yes</entry>
          <entry>
            Yes
            <footnote>
              <para>
                Though this is usually lossy. Export to pixmap graphics is
                intended for presentational purpose mainly.
              </para>
            </footnote>
          </entry>
        </row>
        <row>
          <entry>RHK Technology SPM32</entry>
          <entry>.sm2</entry>
          <entry>rhk-spm32 module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>Surface Imaging Systems</entry>
          <entry>.sis</entry>
          <entry>sis module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>SPMLab</entry>
          <entry>.zfr, .tfr, .zfp, â€¦</entry>
          <entry>
            io_tm_common plug-in, spmlab module
            <footnote>
              <para>
                io_tm_common is a closed-source plug-in that supports the
                file format quite completely, but must be downloaded
                separately.  On the other hand spmlab module provides only
                basic support, but is software libre and is distributed
                directly with Gwyddion.
              </para>
            </footnote>
          </entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>STMPRG</entry>
          <entry></entry>
          <entry>stmprg module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
        <row>
          <entry>WSxM (Nanotec)</entry>
          <entry>.tom, .stp</entry>
          <entry>wsxmfile module</entry>
          <entry>Yes</entry>
          <entry>No</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</section>

