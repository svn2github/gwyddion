<?xml version='1.0' encoding='utf-8'?>
<!-- @(#) $Id$ -->
<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.2//EN'
               'http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd'>
<chapter id="installation">
  <title>Installation</title>
  <para>
    <application>Gwyddion</application> source code and binaries can be
    downloaded from the
    <ulink url="http://gwyddion.net/download.php">download</ulink>
    web page of the project, or alternatively from raw
    <ulink url="http://sourceforge.net/project/showfiles.php?group_id=121723">SourceForge.net download page</ulink>.
    The instalation sligtly varies depending on the operating system used.
    However, basically it consist of two steps:
    <itemizedlist>
      <listitem>
        <para>
          Installing the <ulink url="http://www.gtk.org/">Gtk+</ulink> widget
          toolkit (if not already done).
        </para>
      </listitem>
      <listitem>
        <para>Installing Gwyddion</para>
      </listitem>
    </itemizedlist>
    The first step is necessary at first <application>Gwyddion</application>
    installation on operating systems that do not come with Gtk+.
    The version of Gtk+ necessary for your system (and where to obtain it) is
    desribed in the next sections.
  </para>
  <para>
    Generally, one needs Gtk+ libraries (runtime package) for running
    <application>Gwyddion</application>
    and a Gtk+ development package for <application>Gwyddion</application>
    compilation from source code and developement.
  </para>
  <para>
    We recommend to download
    <ulink url="http://gwyddion.net/download.php#sample-files">sample
      <application>Gwyddion</application> files</ulink>
    too. They are in native <application>Gwyddion</application> format
    and represent typical AFM data.
  </para>

  <section id="installation-unix">
    <title>Linux/Unix packages</title>
    <para>
      Some Linux and Unix systems may provide binary packages of Gwyddion.
      The <ulink url="http://gwyddion.net/download.php">download</ulink> page
      of the project also tracks known packages and packaging efforts.
      If your operating system provides such a package and it is recent enough,
      install it using the standard means of the operating system.  Otherwise
      proceed with compilation from source code.
    </para>
  </section>

  <section id="installation-ms-windows">
    <title>MS Windows packages</title>
    <para>
      If you never had any Gtk+ based application on your system (for example
      bitmap editor
      <ulink url="http://www.gimp.org/"><application>GIMP</application></ulink>)
      you will need to install Gtk+ runtime enviroment on your computer prior
      to <application>Gwyddion</application> installation.
      Gtk+ is a library designed for portable creating of graphical user
      interface (windows, buttons, etc.) that is available on many operating
      systems. Therefore applications using Gtk+ can be ported to various
      operating systems, including Microsoft Windows.
    </para>
    <para>
      Note that there are several Gtk+ packages for MS Windows operating
      systems available on the internet. Some of them include all required
      components (like GtkGLExt and LibXML2), some do not. We recommend
      <ulink url="http://gladewin32.sourceforge.net/">GladeWin32</ulink>
      packages that are known to contain all required components and we
      build Gwyddion MS Windows executables with them.
    </para>
    <para>
      For installation of <application>Gwyddion</application> please follow
      these steps:
    </para>
    <itemizedlist>
      <listitem>
        Download the Gtk+ runtime enviroment installer from
        <ulink url="http://gladewin32.sourceforge.net/">Gladewin32</ulink>,
        version 2.8 or higher, and install it.
      </listitem>
      <listitem>
        Download <ulink url="http://gwyddion.net/download.php#stable-windows"><application>Gwyddion</application> installer</ulink> and install
        <application>Gwyddion</application>.
      </listitem>
    </itemizedlist>
  </section>

  <section id="installation-dependencies">
    <title>Build dependencies</title>
    <para>
      The following table lists packages required to build
      <application>Gwyddion</application> from source code.  It does not
      include common compilation prerequisites like the compiler or
      <command>make</command>.  Operating system specifics are described
      in following sections dedicated to building on particular operating
      systems.
    </para>
    <variablelist>
      <title>Build dependencies</title>
      <varlistentry>
        <term>
          <ulink url="http://www.gtk.org/">Gtk+</ulink>
          ≥ 2.6.0 (Unix),
          ≥ 2.8.0 (MS Windows)
        </term>
        <listitem>
          <para>
            <emphasis>Required.</emphasis>
          </para>
          <para>
            It is possible to build Gwyddion with Gtk+ 2.6 on MS Windows too,
            but it requires manual build system adjustments and it is not
            supported.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://gtkglext.sourceforge.net/">GtkGLExt</ulink>
          ≥ 1.0
        </term>
        <listitem>
          <para>
            <emphasis>Optional.</emphasis>
          </para>
          <para>
            Enables OpenGL 3D data views.
          </para>
          <para>
            The MS Windows build system is set up to require GtkGLExt and
            manual adjustments are necessary to disable it there.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://www.libtiff.org/">LibTIFF</ulink>
          ≥ 3.6.0
        </term>
        <listitem>
          <para>
            <emphasis>Optional.</emphasis>
          </para>
          <para>
            Enables import of TIFF-based data files, namely JPK and PSIA,
            also enables export to TIFF images.
          </para>
          <para>
            The MS Windows build system is set up to require LibTIFF and
            manual adjustments are necessary to disable it there.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://xmlsoft.org/">LibXML2</ulink>
          ≥ 2.<varname>x</varname>
        </term>
        <listitem>
          <para>
            <emphasis>Optional.</emphasis>
          </para>
          <para>
            Enables import of SPML files.
          </para>
          <para>
            The MS Windows build system is set up to require LibXML2 and
            manual adjustments are necessary to disable it there.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://www.fftw.org/">FFTW3</ulink>
          ≥ 3.0 (32bit),
          ≥ 3.1 (64bit),
          Unix only
        </term>
        <listitem>
          <para>
            <emphasis>Optional.</emphasis>
          </para>
          <para>
            Speeds up various integral transforms, power spectrum and
            correlation operations.  Also enables to process data fields of
            much more sizes without rescaling.
          </para>
          <para>
            Building with FFTW3 enabled is currently unsupported on MS Windows,
            although it is probably possible with some effort and manual
            adjustments.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <ulink url="http://www.jrsoftware.org/isinfo.php">Inno Setup</ulink>
          ≥ 4, MS Windows only
        </term>
        <listitem>
          <para>
            <emphasis>Optional.</emphasis>
          </para>
          <para>
            Enables creation of executable installers on MS Windows.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="installation-unix-source">
    <title>Linux/Unix from source tarball</title>
    <para>
      The follwing detailed procedure (and even more) can be found in
      <filename>INSTALL</filename> file in the source tarball.
      <application>Gwyddion</application> specific instructions can be found
      in file <filename>INSTALL.gwyddion</filename>.  This file is updated
      more regularly than this guide, therefore if they contradict
      <filename>INSTALL.gwyddion</filename> is right.
    </para>
    <para>
      The <command>configure</command> shell script attempts to guess correct
      values for various system-dependent variables used during compilation.
      It uses those values to create a <filename>Makefile</filename> in each
      directory of the package. It may also create one or more
      <filename>.h</filename> files containing system-dependent definitions.
      Finally, it creates a shell script <command>config.status</command> that
      you can run in the future to recreate the current configuration, and
      a file <filename>config.log</filename>.  This contains the details of
      the detection process and it is helpful to include it in compilation
      related bug reports.
    </para>
    <para>
      If you need to do unusual things to compile the package, please try to
      figure out how <command>configure</command> could check whether to do
      them, and mail diffs or instructions to the address given in the
      <filename>README</filename> so they can be considered for the next
      release.
    </para>
    <para>
      The simplest way to compile <application>Gwyddion</application> is:
    </para>
    <itemizedlist>
      <listitem>
        Unpack the source code tarball with
        <userinput>tar -jxvf gwyddion-<varname>version</varname>.tar.bz2</userinput>
        or <userinput>tar -zxvf gwyddion-<varname>version</varname>.tar.gz</userinput>.
      </listitem>
      <listitem>
        <command>cd</command> to the directory containing the program's source
        code and type <userinput>./configure</userinput> to configure the
        package for your system.
      </listitem>
      <listitem>
        If <command>configure</command> reports missing required packages,
        install these packages and re-run it.  The same applies to the case
        when <command>configure</command> passes but you find you have not
        installed an optional package you want to compile
        <application>Gwyddion</application> with.
      </listitem>
      <listitem>
        It is possible to change the directories the program will install to
        and enable/disable various features with <command>configure</command>
        command line options. To obtain the complete list of these options, run
        <userinput>./configure --help</userinput>.
      </listitem>
      <listitem>
        Type <userinput>make</userinput> to compile the package.
      </listitem>
      <listitem>
        Type <userinput>make install</userinput> to install the programs,
        libraries, data files and other components to their target
        directories.
      </listitem>
      <listitem>
        You can remove the program binaries and object files from the source
        code directory by typing <userinput>make clean</userinput>.  To also
        remove the files that <command>configure</command> created (so you can
        compile the package for a different kind of computer), type
        <userinput>make distclean</userinput>.
      </listitem>
    </itemizedlist>
    <para>
      For more details about compilers, options, and other installation and
      compiling issues please see the <filename>INSTALL</filename> file in the
      source tarball.
    </para>
    <para>
      It is also possible to build RPM packages on RPM-based GNU/Linux
      distributions directly from source code tarballs with
      <userinput>rpmbuld -tb gwyddion-<varname>version</varname>.tar.bz2</userinput>
    </para>
  </section>

  <section id="installation-linux-devel">
    <title>Linux/FreeBSD for developers</title>
    <para>
      The installation for developers on Linux is exactly same as the usual
      installation from source tarball. If you installed
      <application>Gwyddion</application> in this way you can directly edit
      anything and recompile <application>Gwyddion</application> when you want.
      Do not forget to install <application>Gwyddion</application> after each
      compile to get the modules and plugins apparatus working. Good luck.
    </para>
    <para>
      Some more instructions for developers (not operating system dependent) are in the chapter
      <link linkend="development">Developing Gwyddion</link>.
    </para>
  </section>
  <section id="installation-ms-windows-devel">
    <title>Windows version for developers</title>
    <para>
      If you want to become developer, you can use Microsoft Visual C++ compiler to compile the application
      and subsequently to develop your code.
      Use source tarball in that case
      and compile application using <command>nmake</command> command. In this case you will need Gtk development enviromet installed on your system.
      You will probably need to change paths to Gtk+ and MSVC toplevel directories in the make.msc file.
      The default paths are (see first few lines of make.msc):
      <programlisting>
        # XXX: set following to your Gtk+-Development and MSVC paths
        GTK_TOP = C:\Gtk
        MSC_TOP = C:\Program Files\Microsoft Visual Studio\VC98
      </programlisting>
    </para>
    <para>
      Some more instructions for developers (not operating system dependent) are in the chapter
      <link linkend="development">Developing Gwyddion</link>.
    </para>
  </section>
</chapter>
