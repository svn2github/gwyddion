<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gwymodule-tutorial-overview" revision="@(#) $Id$">
  <refmeta>
    <refentrytitle>Gwyddion Module Overview</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>Gwyddion</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>Gwyddion Module Overview</refname>
    <refpurpose>
      Overview of Gwyddion modules
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Overview</title>
    <para>
      Gwyddion is quite a modular application.  In fact, most of its basic
      functionallity is provided by modules.  Modules allow to easily extend
      Gwyddion without the need to recompile. Modules need to be copied
      in appropriate directories only followed by Gwyddion restart.
      Modules are then automatically detected, registered and the functions provided by modules
      are added to Gwyddion menu.
    </para>
    <para>
      There are several distinct module types:
      <itemizedlist>
        <listitem><para>
          <link linkend="gwymodule-process">data processing modules</link> – these modules
          provide functions for processing of two-dimensional data arrays (e. g. <emphasis>fast fourier transform</emphasis> module),
          or changing the graphical presentation of data (e. g. <emphasis>shading</emphasis> module). Data processing
          modules usually get data (e. g. two-dimensional field of SPM data), ask for processing options
          and do requested data processing. For more interactive use, we recommend to use <emphasis>tool module</emphasis> type.
        </para></listitem>
        <listitem><para>
          <link linkend="gwymodule-file">file loading and saving modules</link>
        </para></listitem>
        <listitem><para>
          <link linkend="gwymodule-graph">graph modules</link> – these modules are used
          to process special class of data in the apllication – graphs of one-dimensional functions
          (e. g. profiles obtained by <emphasis>Profile selection</emphasis> tool).
        </para></listitem>
        <listitem><para>
          <link linkend="gwymodule-tool">tool modules</link> – tools are modules extended
          to provide more interactive interface (namely connected with selections by mouse).
          This means ability of active recomputation of the requested parameters while creating and changing selections
          on the original data (e. g. <emphasis>read value</emphasis> tool, <emphasis>three-point leveling</emphasis> tool).
        </para></listitem>
        <listitem><para>
          <link linkend="gwymodule-layer">layer modules</link> – FIXME
        </para></listitem>
      </itemizedlist>
    </para>
    <para>
      The types above are in fact
      <emphasis>function</emphasis> types, not module types.
      One module can provide a single function or a whole
      bunch of completely unrelated functions, even of different type.
      However, it's usual to
      group functions containing considreable amount of common code to one
      module to allow its sharing, and use separate modules for unrelated
      functions.
    </para>
    <para>
      More precisely, a file (i.e., a shared/dynamically linked library)
      always corresponds to a one Gwyddion module.  A module can register
      zero or more functions (features).
    </para>
  </refsect1>
</refentry>

